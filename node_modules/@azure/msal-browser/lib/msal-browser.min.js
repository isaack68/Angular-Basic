/*! @azure/msal-browser v3.2.0 2023-10-05 */
"use strict";!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).msal={})}(this,(function(e){
/*! @azure/msal-common v14.1.0 2023-10-05 */
const t={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",REGIONAL_AUTH_NON_MSI_QUERY_STRING:"allowestsrnonmsi=true",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},o=400,r=499,n=500,i=599,s=[t.OPENID_SCOPE,t.PROFILE_SCOPE,t.OFFLINE_ACCESS_SCOPE],a=[...s,t.EMAIL_SCOPE],c="Content-Type",l="Retry-After",h="X-AnchorMailbox",d="WWW-Authenticate",u="Authentication-Info",g="x-ms-request-id",p="x-ms-httpver",m="idtoken",f="client.info",y="adal.idtoken",C="error",v="error.description",w="active-account",I="active-account-filters",T="common",_="organizations",k="consumers",A="client_id",S="redirect_uri",b="response_type",E="response_mode",R="grant_type",P="claims",M="scope",N="refresh_token",O="state",q="nonce",H="prompt",L="code",U="code_challenge",B="code_challenge_method",D="code_verifier",x="client-request-id",F="x-client-SKU",K="x-client-VER",z="x-client-OS",G="x-client-CPU",$="x-client-current-telemetry",j="x-client-last-telemetry",Q="x-ms-lib-capability",Y="x-app-name",W="x-app-ver",V="post_logout_redirect_uri",J="id_token_hint",X="device_code",Z="client_secret",ee="client_assertion",te="client_assertion_type",oe="token_type",re="req_cnf",ne="assertion",ie="requested_token_use",se="return_spa_code",ae="nativebroker",ce="logout_hint",le="access_token",he="xms_cc",de={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},ue="sid",ge="login_hint",pe="domain_hint",me={PLAIN:"plain",S256:"S256"},fe={QUERY:"query",FRAGMENT:"fragment"},ye={...fe,FORM_POST:"form_post"},Ce="authorization_code",ve="refresh_token",we="MSSTS",Ie="ADFS",Te="Generic",_e="-",ke=".",Ae={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},Se=2001,be=2002,Ee=2003,Re="appmetadata",Pe="1",Me="authority-metadata",Ne=86400,Oe="config",qe="cache",He="network",Le="hardcoded_values",Ue={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},Be={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},De=60,xe=3600,Fe="throttling",Ke="retry-after, h429",ze="invalid_grant",Ge="client_mismatch",$e="username",je="password",Qe=200,Ye=400,We="1",Ve="3",Je="4",Xe="2",Ze="4",et="5",tt="0",ot="1",rt="2",nt="3",it="4",st="pop",at="unexpected_error",ct="post_request_failed";var lt=Object.freeze({__proto__:null,postRequestFailed:ct,unexpectedError:at});
/*! @azure/msal-common v14.1.0 2023-10-05 */const ht={[at]:"Unexpected error in authentication.",[ct]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},dt={unexpectedError:{code:at,desc:ht[at]},postRequestFailed:{code:ct,desc:ht[ct]}};class ut extends Error{constructor(e,o,r){super(o?`${e}: ${o}`:e),Object.setPrototypeOf(this,ut.prototype),this.errorCode=e||t.EMPTY_STRING,this.errorMessage=o||t.EMPTY_STRING,this.subError=r||t.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function gt(e,t){return new ut(e,t?`${ht[e]} ${t}`:ht[e])}
/*! @azure/msal-common v14.1.0 2023-10-05 */const pt="client_info_decoding_error",mt="client_info_empty_error",ft="token_parsing_error",yt="null_or_empty_token",Ct="endpoints_resolution_error",vt="network_error",wt="openid_config_error",It="hash_not_deserialized",Tt="invalid_state",_t="state_mismatch",kt="state_not_found",At="nonce_mismatch",St="auth_time_not_found",bt="max_age_transpired",Et="multiple_matching_tokens",Rt="multiple_matching_accounts",Pt="multiple_matching_appMetadata",Mt="request_cannot_be_made",Nt="cannot_remove_empty_scope",Ot="cannot_append_scopeset",qt="empty_input_scopeset",Ht="device_code_polling_cancelled",Lt="device_code_expired",Ut="device_code_unknown_error",Bt="no_account_in_silent_request",Dt="invalid_cache_record",xt="invalid_cache_environment",Ft="no_account_found",Kt="no_crypto_object",zt="unexpected_credential_type",Gt="invalid_assertion",$t="invalid_client_credential",jt="token_refresh_required",Qt="user_timeout_reached",Yt="token_claims_cnf_required_for_signedjwt",Wt="authorization_code_missing_from_server_response",Vt="binding_key_not_removed",Jt="end_session_endpoint_not_supported",Xt="key_id_missing",Zt="no_network_connectivity",eo="user_canceled",to="missing_tenant_id_error",oo="method_not_implemented";var ro=Object.freeze({__proto__:null,authTimeNotFound:St,authorizationCodeMissingFromServerResponse:Wt,bindingKeyNotRemoved:Vt,cannotAppendScopeSet:Ot,cannotRemoveEmptyScope:Nt,clientInfoDecodingError:pt,clientInfoEmptyError:mt,deviceCodeExpired:Lt,deviceCodePollingCancelled:Ht,deviceCodeUnknownError:Ut,emptyInputScopeSet:qt,endSessionEndpointNotSupported:Jt,endpointResolutionError:Ct,hashNotDeserialized:It,invalidAssertion:Gt,invalidCacheEnvironment:xt,invalidCacheRecord:Dt,invalidClientCredential:$t,invalidState:Tt,keyIdMissing:Xt,maxAgeTranspired:bt,methodNotImplemented:oo,missingTenantIdError:to,multipleMatchingAccounts:Rt,multipleMatchingAppMetadata:Pt,multipleMatchingTokens:Et,networkError:vt,noAccountFound:Ft,noAccountInSilentRequest:Bt,noCryptoObject:Kt,noNetworkConnectivity:Zt,nonceMismatch:At,nullOrEmptyToken:yt,openIdConfigError:wt,requestCannotBeMade:Mt,stateMismatch:_t,stateNotFound:kt,tokenClaimsCnfRequiredForSignedJwt:Yt,tokenParsingError:ft,tokenRefreshRequired:jt,unexpectedCredentialType:zt,userCanceled:eo,userTimeoutReached:Qt});
/*! @azure/msal-common v14.1.0 2023-10-05 */const no={[pt]:"The client info could not be parsed/decoded correctly",[mt]:"The client info was empty",[ft]:"Token cannot be parsed",[yt]:"The token is null or empty",[Ct]:"Endpoints cannot be resolved",[vt]:"Network request failed",[wt]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[It]:"The hash parameters could not be deserialized",[Tt]:"State was not the expected format",[_t]:"State mismatch error",[kt]:"State not found",[At]:"Nonce mismatch error",[St]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[bt]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[Et]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[Rt]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Pt]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[Mt]:"Token request cannot be made without authorization code or refresh token.",[Nt]:"Cannot remove null or empty scope from ScopeSet",[Ot]:"Cannot append ScopeSet",[qt]:"Empty input ScopeSet cannot be processed",[Ht]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Lt]:"Device code is expired.",[Ut]:"Device code stopped polling for unknown reasons.",[Bt]:"Please pass an account object, silent flow is not supported without account information",[Dt]:"Cache record object was null or undefined.",[xt]:"Invalid environment when attempting to create cache entry",[Ft]:"No account found in cache for given key.",[Kt]:"No crypto object detected.",[zt]:"Unexpected credential type.",[Gt]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[$t]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[jt]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Qt]:"User defined timeout for device code polling reached",[Yt]:"Cannot generate a POP jwt if the token_claims are not populated",[Wt]:"Server response does not contain an authorization code to proceed",[Vt]:"Could not remove the credential's binding key from storage.",[Jt]:"The provided authority does not support logout",[Xt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[Zt]:"No network connectivity. Check your internet connection.",[eo]:"User cancelled the flow.",[to]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[oo]:"This method has not been implemented"},io={clientInfoDecodingError:{code:pt,desc:no[pt]},clientInfoEmptyError:{code:mt,desc:no[mt]},tokenParsingError:{code:ft,desc:no[ft]},nullOrEmptyToken:{code:yt,desc:no[yt]},endpointResolutionError:{code:Ct,desc:no[Ct]},networkError:{code:vt,desc:no[vt]},unableToGetOpenidConfigError:{code:wt,desc:no[wt]},hashNotDeserialized:{code:It,desc:no[It]},invalidStateError:{code:Tt,desc:no[Tt]},stateMismatchError:{code:_t,desc:no[_t]},stateNotFoundError:{code:kt,desc:no[kt]},nonceMismatchError:{code:At,desc:no[At]},authTimeNotFoundError:{code:St,desc:no[St]},maxAgeTranspired:{code:bt,desc:no[bt]},multipleMatchingTokens:{code:Et,desc:no[Et]},multipleMatchingAccounts:{code:Rt,desc:no[Rt]},multipleMatchingAppMetadata:{code:Pt,desc:no[Pt]},tokenRequestCannotBeMade:{code:Mt,desc:no[Mt]},removeEmptyScopeError:{code:Nt,desc:no[Nt]},appendScopeSetError:{code:Ot,desc:no[Ot]},emptyInputScopeSetError:{code:qt,desc:no[qt]},DeviceCodePollingCancelled:{code:Ht,desc:no[Ht]},DeviceCodeExpired:{code:Lt,desc:no[Lt]},DeviceCodeUnknownError:{code:Ut,desc:no[Ut]},NoAccountInSilentRequest:{code:Bt,desc:no[Bt]},invalidCacheRecord:{code:Dt,desc:no[Dt]},invalidCacheEnvironment:{code:xt,desc:no[xt]},noAccountFound:{code:Ft,desc:no[Ft]},noCryptoObj:{code:Kt,desc:no[Kt]},unexpectedCredentialType:{code:zt,desc:no[zt]},invalidAssertion:{code:Gt,desc:no[Gt]},invalidClientCredential:{code:$t,desc:no[$t]},tokenRefreshRequired:{code:jt,desc:no[jt]},userTimeoutReached:{code:Qt,desc:no[Qt]},tokenClaimsRequired:{code:Yt,desc:no[Yt]},noAuthorizationCodeFromServer:{code:Wt,desc:no[Wt]},bindingKeyNotRemovedError:{code:Vt,desc:no[Vt]},logoutNotSupported:{code:Jt,desc:no[Jt]},keyIdMissing:{code:Xt,desc:no[Xt]},noNetworkConnectivity:{code:Zt,desc:no[Zt]},userCanceledError:{code:eo,desc:no[eo]},missingTenantIdError:{code:to,desc:no[to]}};class so extends ut{constructor(e,t){super(e,t?`${no[e]}: ${t}`:no[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,so.prototype)}}function ao(e,t){return new so(e,t)}
/*! @azure/msal-common v14.1.0 2023-10-05 */const co={createNewGuid:()=>{throw ao(oo)},base64Decode:()=>{throw ao(oo)},base64Encode:()=>{throw ao(oo)},async getPublicKeyThumbprint(){throw ao(oo)},async removeTokenBindingKey(){throw ao(oo)},async clearKeystore(){throw ao(oo)},async signJwt(){throw ao(oo)},async hashString(){throw ao(oo)}};
/*! @azure/msal-common v14.1.0 2023-10-05 */var lo;e.LogLevel=void 0,(lo=e.LogLevel||(e.LogLevel={}))[lo.Error=0]="Error",lo[lo.Warning=1]="Warning",lo[lo.Info=2]="Info",lo[lo.Verbose=3]="Verbose",lo[lo.Trace=4]="Trace";class ho{constructor(o,r,n){this.level=e.LogLevel.Info;const i=o||ho.createDefaultLoggerOptions();this.localCallback=i.loggerCallback||(()=>{}),this.piiLoggingEnabled=i.piiLoggingEnabled||!1,this.level="number"==typeof i.logLevel?i.logLevel:e.LogLevel.Info,this.correlationId=i.correlationId||t.EMPTY_STRING,this.packageName=r||t.EMPTY_STRING,this.packageVersion=n||t.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:e.LogLevel.Info}}clone(e,t,o){return new ho({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:o||this.correlationId},e,t)}logMessage(t,o){if(o.logLevel>this.level||!this.piiLoggingEnabled&&o.containsPii)return;const r=`${`[${(new Date).toUTCString()}] : [${o.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${e.LogLevel[o.logLevel]} - ${t}`;this.executeCallback(o.logLevel,r,o.containsPii||!1)}executeCallback(e,t,o){this.localCallback&&this.localCallback(e,t,o)}error(o,r){this.logMessage(o,{logLevel:e.LogLevel.Error,containsPii:!1,correlationId:r||t.EMPTY_STRING})}errorPii(o,r){this.logMessage(o,{logLevel:e.LogLevel.Error,containsPii:!0,correlationId:r||t.EMPTY_STRING})}warning(o,r){this.logMessage(o,{logLevel:e.LogLevel.Warning,containsPii:!1,correlationId:r||t.EMPTY_STRING})}warningPii(o,r){this.logMessage(o,{logLevel:e.LogLevel.Warning,containsPii:!0,correlationId:r||t.EMPTY_STRING})}info(o,r){this.logMessage(o,{logLevel:e.LogLevel.Info,containsPii:!1,correlationId:r||t.EMPTY_STRING})}infoPii(o,r){this.logMessage(o,{logLevel:e.LogLevel.Info,containsPii:!0,correlationId:r||t.EMPTY_STRING})}verbose(o,r){this.logMessage(o,{logLevel:e.LogLevel.Verbose,containsPii:!1,correlationId:r||t.EMPTY_STRING})}verbosePii(o,r){this.logMessage(o,{logLevel:e.LogLevel.Verbose,containsPii:!0,correlationId:r||t.EMPTY_STRING})}trace(o,r){this.logMessage(o,{logLevel:e.LogLevel.Trace,containsPii:!1,correlationId:r||t.EMPTY_STRING})}tracePii(o,r){this.logMessage(o,{logLevel:e.LogLevel.Trace,containsPii:!0,correlationId:r||t.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const uo="@azure/msal-common",go="14.1.0",po={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"},mo="redirect_uri_empty",fo="claims_request_parsing_error",yo="authority_uri_insecure",Co="url_parse_error",vo="empty_url_error",wo="empty_input_scopes_error",Io="invalid_prompt_value",To="invalid_claims",_o="token_request_empty",ko="logout_request_empty",Ao="invalid_code_challenge_method",So="pkce_params_missing",bo="invalid_cloud_discovery_metadata",Eo="invalid_authority_metadata",Ro="untrusted_authority",Po="missing_ssh_jwk",Mo="missing_ssh_kid",No="missing_nonce_authentication_header",Oo="invalid_authentication_header",qo="cannot_set_OIDCOptions",Ho="cannot_allow_native_broker",Lo="authority_mismatch";var Uo=Object.freeze({__proto__:null,authorityMismatch:Lo,authorityUriInsecure:yo,cannotAllowNativeBroker:Ho,cannotSetOIDCOptions:qo,claimsRequestParsingError:fo,emptyInputScopesError:wo,invalidAuthenticationHeader:Oo,invalidAuthorityMetadata:Eo,invalidClaims:To,invalidCloudDiscoveryMetadata:bo,invalidCodeChallengeMethod:Ao,invalidPromptValue:Io,logoutRequestEmpty:ko,missingNonceAuthenticationHeader:No,missingSshJwk:Po,missingSshKid:Mo,pkceParamsMissing:So,redirectUriEmpty:mo,tokenRequestEmpty:_o,untrustedAuthority:Ro,urlEmptyError:vo,urlParseError:Co});
/*! @azure/msal-common v14.1.0 2023-10-05 */const Bo={[mo]:"A redirect URI is required for all calls, and none has been set.",[fo]:"Could not parse the given claims request object.",[yo]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Co]:"URL could not be parsed into appropriate segments.",[vo]:"URL was empty or null.",[wo]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Io]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[To]:"Given claims parameter must be a stringified JSON object.",[_o]:"Token request was empty and not found in cache.",[ko]:"The logout request was null or undefined.",[Ao]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[So]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[bo]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Eo]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Ro]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Po]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Mo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[No]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Oo]:"Invalid authentication header provided",[qo]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Ho]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Lo]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},Do={redirectUriNotSet:{code:mo,desc:Bo[mo]},claimsRequestParsingError:{code:fo,desc:Bo[fo]},authorityUriInsecure:{code:yo,desc:Bo[yo]},urlParseError:{code:Co,desc:Bo[Co]},urlEmptyError:{code:vo,desc:Bo[vo]},emptyScopesError:{code:wo,desc:Bo[wo]},invalidPrompt:{code:Io,desc:Bo[Io]},invalidClaimsRequest:{code:To,desc:Bo[To]},tokenRequestEmptyError:{code:_o,desc:Bo[_o]},logoutRequestEmptyError:{code:ko,desc:Bo[ko]},invalidCodeChallengeMethod:{code:Ao,desc:Bo[Ao]},invalidCodeChallengeParams:{code:So,desc:Bo[So]},invalidCloudDiscoveryMetadata:{code:bo,desc:Bo[bo]},invalidAuthorityMetadata:{code:Eo,desc:Bo[Eo]},untrustedAuthority:{code:Ro,desc:Bo[Ro]},missingSshJwk:{code:Po,desc:Bo[Po]},missingSshKid:{code:Mo,desc:Bo[Mo]},missingNonceAuthenticationHeader:{code:No,desc:Bo[No]},invalidAuthenticationHeader:{code:Oo,desc:Bo[Oo]},cannotSetOIDCOptions:{code:qo,desc:Bo[qo]},cannotAllowNativeBroker:{code:Ho,desc:Bo[Ho]},authorityMismatch:{code:Lo,desc:Bo[Lo]}};class xo extends ut{constructor(e){super(e,Bo[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,xo.prototype)}}function Fo(e){return new xo(e)}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Ko{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},o=e.split("&"),r=e=>decodeURIComponent(e.replace(/\+/g," "));return o.forEach((e=>{if(e.trim()){const[o,n]=e.split(/=(.+)/g,2);o&&n&&(t[r(o)]=r(n))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class zo{constructor(e){const t=e?Ko.trimArrayEntries([...e]):[],o=t?Ko.removeEmptyStringsFromArray(t):[];this.validateInputScopes(o),this.scopes=new Set,o.forEach((e=>this.scopes.add(e)))}static fromString(e){const o=(e||t.EMPTY_STRING).split(" ");return new zo(o)}static createSearchScopes(e){const o=new zo(e);return o.containsOnlyOIDCScopes()?o.removeScope(t.OFFLINE_ACCESS_SCOPE):o.removeOIDCScopes(),o}validateInputScopes(e){if(!e||e.length<1)throw Fo(wo)}containsScope(e){const t=this.printScopesLowerCase().split(" "),o=new zo(t);return!!e&&o.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&(this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e))))}containsOnlyOIDCScopes(){let e=0;return a.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw ao(Ot)}}removeScope(e){if(!e)throw ao(Nt);this.scopes.delete(e.trim())}removeOIDCScopes(){a.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw ao(qt);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw ao(qt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),o=e.getScopeCount(),r=this.getScopeCount();return t.size<r+o}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){if(this.scopes){return this.asArray().join(" ")}return t.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}
/*! @azure/msal-common v14.1.0 2023-10-05 */function Go(e,t){if(!e)throw ao(mt);try{const o=t.base64Decode(e);return JSON.parse(o)}catch(e){throw ao(pt)}}function $o(e){if(!e)throw ao(pt);const o=e.split(ke,2);return{uid:o[0],utid:o.length<2?t.EMPTY_STRING:o[1]}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const jo=0,Qo=1,Yo=2,Wo=3,Vo={AAD:"AAD",OIDC:"OIDC"};
/*! @azure/msal-common v14.1.0 2023-10-05 */
/*! @azure/msal-common v14.1.0 2023-10-05 */
class Jo{generateAccountId(){return[this.homeAccountId,this.environment].join(_e).toLowerCase()}generateAccountKey(){return Jo.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,idTokenClaims:this.idTokenClaims,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType}}static generateAccountCacheKey(e){return[e.homeAccountId,e.environment||t.EMPTY_STRING,e.tenantId||t.EMPTY_STRING].join(_e).toLowerCase()}static createAccount(e,o){const r=new Jo;o.authorityType===Qo?r.authorityType=Ie:o.protocolMode===Vo.AAD?r.authorityType=we:r.authorityType=Te,r.clientInfo=e.clientInfo,r.homeAccountId=e.homeAccountId,r.nativeAccountId=e.nativeAccountId;const n=e.environment||o&&o.getPreferredCache();if(!n)throw ao(xt);r.environment=n,r.realm=e.idTokenClaims.tid||t.EMPTY_STRING,r.idTokenClaims=e.idTokenClaims,r.localAccountId=e.idTokenClaims.oid||e.idTokenClaims.sub||t.EMPTY_STRING;const i=e.idTokenClaims.preferred_username||e.idTokenClaims.upn,s=e.idTokenClaims.emails?e.idTokenClaims.emails[0]:null;return r.username=i||s||t.EMPTY_STRING,r.name=e.idTokenClaims.name,r.cloudGraphHostName=e.cloudGraphHostName,r.msGraphHost=e.msGraphHost,r}static createFromAccountInfo(e,t,o){const r=new Jo;return r.authorityType=e.authorityType||Te,r.homeAccountId=e.homeAccountId,r.localAccountId=e.localAccountId,r.nativeAccountId=e.nativeAccountId,r.realm=e.tenantId,r.environment=e.environment,r.username=e.username,r.name=e.name,r.idTokenClaims=e.idTokenClaims,r.cloudGraphHostName=t,r.msGraphHost=o,r}static generateHomeAccountId(e,o,r,n,i){const s=i?.sub?i.sub:t.EMPTY_STRING;if(o===Qo||o===Yo)return s;if(e)try{const t=Go(e,n);if(t.uid&&t.utid)return`${t.uid}${ke}${t.utid}`}catch(e){}return r.verbose("No client info in response"),s}static isAccountEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"))}static accountInfoIsEqual(e,t,o){if(!e||!t)return!1;let r=!0;if(o){const o=e.idTokenClaims||{},n=t.idTokenClaims||{};r=o.iat===n.iat&&o.nonce===n.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&r}}
/*! @azure/msal-common v14.1.0 2023-10-05 */function Xo(e,t){const o=function(e){if(!e)throw ao(yt);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw ao(ft);return t[2]}(e);try{const e=t(o);return JSON.parse(e)}catch(e){throw ao(ft)}}function Zo(e,t){if(0===t||Date.now()-3e5>e+t)throw ao(bt)}
/*! @azure/msal-common v14.1.0 2023-10-05 */class er{constructor(e,t,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=o.clone(uo,go)}getAllAccounts(e){if(e)return this.getAccountsFilteredBy(e).map((e=>e.getAccountInfo()));const t=this.getAccountKeys();if(t.length<1)return[];return t.reduce(((e,t)=>{const o=this.getAccount(t);return o?(e.push(o),e):e}),[]).map((e=>this.getAccountInfoFromEntity(e)))}getAccountInfoFilteredBy(e){const t=this.getAccountsFilteredBy(e);return t.length>0?this.getAccountInfoFromEntity(t[0]):null}getAccountInfoFromEntity(e){const t=e.getAccountInfo(),o=this.getIdToken(t);return o&&(t.idToken=o.secret,t.idTokenClaims=Xo(o.secret,this.cryptoImpl.base64Decode)),t}async saveCacheRecord(e,t){if(!e)throw ao(Dt);e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},o=this.getTokenKeys(),r=zo.fromString(e.target),n=[];o.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const o=this.getAccessTokenCredential(e);if(o&&this.credentialMatchesFilter(o,t)){zo.fromString(o.target).intersectingScopeSets(r)&&n.push(this.removeAccessToken(e))}})),await Promise.all(n),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),o=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId,e.tenantId))return;const r=this.getAccount(t);r&&(e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.localAccountId&&!this.matchLocalAccountId(r,e.localAccountId)||e.username&&!this.matchUsername(r,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.tenantId&&!this.matchRealm(r,e.tenantId)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.loginHint&&!this.matchLoginHint(r,e.loginHint)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType)||e.name&&!this.matchName(r,e.name)||o.push(r))})),o}isAccountKey(e,t,o){return!(e.split(_e).length<3)&&(!(t&&!e.toLowerCase().includes(t.toLowerCase()))&&!(o&&!e.toLowerCase().includes(o.toLowerCase())))}isCredentialKey(e){if(e.split(_e).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(Ae.ID_TOKEN.toLowerCase())&&-1===t.indexOf(Ae.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(Ae.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(Ae.REFRESH_TOKEN.toLowerCase())>-1){const e=`${Ae.REFRESH_TOKEN}${_e}${this.clientId}${_e}`,o=`${Ae.REFRESH_TOKEN}${_e}${Pe}${_e}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(o.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===Be.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){return this.getAppMetadataFilteredByInternal(e.environment,e.clientId)}getAppMetadataFilteredByInternal(e,t){const o=this.getKeys(),r={};return o.forEach((o=>{if(!this.isAppMetadata(o))return;const n=this.getAppMetadata(o);n&&(e&&!this.matchEnvironment(n,e)||t&&!this.matchClientId(n,t)||(r[o]=n))})),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let o=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const r=this.getAuthorityMetadata(t);r&&-1!==r.aliases.indexOf(e)&&(o=r)})),o}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),o=e.generateAccountId(),r=[];t.idToken.forEach((e=>{0===e.indexOf(o)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(o)&&r.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(o)&&this.removeRefreshToken(e)})),await Promise.all(r)}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===Be.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw ao(Vt)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readCacheRecord(e,t,o){const r=this.getTokenKeys(),n=this.readAccountFromCache(e),i=this.getIdToken(e,r),s=this.getAccessToken(e,t,r),a=this.getRefreshToken(e,!1,r),c=this.readAppMetadataFromCache(o);return n&&i&&(n.idTokenClaims=Xo(i.secret,this.cryptoImpl.base64Decode)),{account:n,idToken:i,accessToken:s,refreshToken:a,appMetadata:c}}readAccountFromCache(e){const t=Jo.generateAccountCacheKey(e);return this.getAccount(t)}getIdToken(e,t){this.commonLogger.trace("CacheManager - getIdToken called");const o={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:Ae.ID_TOKEN,clientId:this.clientId,realm:e.tenantId},r=this.getIdTokensByFilter(o,t),n=r.length;return n<1?(this.commonLogger.info("CacheManager:getIdToken - No token found"),null):n>1?(this.commonLogger.info("CacheManager:getIdToken - Multiple id tokens found, clearing them"),r.forEach((e=>{this.removeIdToken(e.generateCredentialKey())})),null):(this.commonLogger.info("CacheManager:getIdToken - Returning id token"),r[0])}getIdTokensByFilter(e,t){const o=t&&t.idToken||this.getTokenKeys().idToken,r=[];return o.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const o=this.getIdTokenCredential(t);o&&this.credentialMatchesFilter(o,e)&&r.push(o)})),r}idTokenKeyMatchesFilter(e,t){const o=e.toLowerCase();return(!t.clientId||-1!==o.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==o.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,o){this.commonLogger.trace("CacheManager - getAccessToken called");const r=zo.createSearchScopes(t.scopes),n=t.authenticationScheme||Be.BEARER,i=n&&n.toLowerCase()!==Be.BEARER.toLowerCase()?Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME:Ae.ACCESS_TOKEN,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:i,clientId:this.clientId,realm:e.tenantId,target:r,tokenType:n,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},a=o&&o.accessToken||this.getTokenKeys().accessToken,c=[];a.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,s,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}}));const l=c.length;return l<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):l>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),c.forEach((e=>{this.removeAccessToken(e.generateCredentialKey())})),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),c[0])}accessTokenKeyMatchesFilter(e,t,o){const r=e.toLowerCase();if(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===r.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===r.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(o&&!r.includes(e[t].toLowerCase()))return!1;if(!o&&r.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),o=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const r=this.getAccessTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&o.push(r)})),o}getRefreshToken(e,t,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const r=t?Pe:void 0,n={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:Ae.REFRESH_TOKEN,clientId:this.clientId,familyId:r},i=o&&o.refreshToken||this.getTokenKeys().refreshToken,s=[];i.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,n)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,n)&&s.push(t)}}));return s.length<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),s[0])}refreshTokenKeyMatchesFilter(e,t){const o=e.toLowerCase();return(!t.familyId||-1!==o.indexOf(t.familyId.toLowerCase()))&&(!(!t.familyId&&t.clientId&&-1===o.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==o.indexOf(t.homeAccountId.toLowerCase())))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},o=this.getAppMetadataFilteredBy(t),r=Object.keys(o).map((e=>o[e])),n=r.length;if(n<1)return null;if(n>1)throw ao(Pt);return r[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==Pe)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountId(e,t){return!("string"!=typeof e.localAccountId||t!==e.localAccountId)}matchUsername(e,t){return!("string"!=typeof e.username||t.toLowerCase()!==e.username.toLowerCase())}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){const o=this.getAuthorityMetadataByAlias(t);return!!(o&&o.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(!e.realm||t!==e.realm)}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHint(e,t){return e.idTokenClaims?.login_hint===t||(e.username===t||e.idTokenClaims?.upn===t)}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){if(e.credentialType!==Ae.ACCESS_TOKEN&&e.credentialType!==Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)return!1;return zo.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(Re)}isAuthorityMetadata(e){return-1!==e.indexOf(Me)}generateAuthorityMetadataCacheKey(e){return`${Me}-${this.clientId}-${e}`}static toObject(e,t){for(const o in t)e[o]=t[o];return e}}class tr extends er{setAccount(){throw ao(oo)}getAccount(){throw ao(oo)}setIdTokenCredential(){throw ao(oo)}getIdTokenCredential(){throw ao(oo)}setAccessTokenCredential(){throw ao(oo)}getAccessTokenCredential(){throw ao(oo)}setRefreshTokenCredential(){throw ao(oo)}getRefreshTokenCredential(){throw ao(oo)}setAppMetadata(){throw ao(oo)}getAppMetadata(){throw ao(oo)}setServerTelemetry(){throw ao(oo)}getServerTelemetry(){throw ao(oo)}setAuthorityMetadata(){throw ao(oo)}getAuthorityMetadata(){throw ao(oo)}getAuthorityMetadataKeys(){throw ao(oo)}setThrottlingCache(){throw ao(oo)}getThrottlingCache(){throw ao(oo)}removeItem(){throw ao(oo)}containsKey(){throw ao(oo)}getKeys(){throw ao(oo)}getAccountKeys(){throw ao(oo)}getTokenKeys(){throw ao(oo)}async clear(){throw ao(oo)}updateCredentialCacheKey(){throw ao(oo)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const or={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},rr={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:e.LogLevel.Info,correlationId:t.EMPTY_STRING},nr={claimsBasedCachingEnabled:!1},ir={async sendGetRequestAsync(){throw ao(oo)},async sendPostRequestAsync(){throw ao(oo)}},sr={sku:t.SKU,version:go,cpu:t.EMPTY_STRING,os:t.EMPTY_STRING},ar={clientSecret:t.EMPTY_STRING,clientAssertion:void 0},cr={azureCloudInstance:po.None,tenant:`${t.DEFAULT_COMMON_TENANT}`},lr={application:{appName:"",appVersion:""}};function hr(e){return e.authOptions.authority.options.protocolMode===Vo.OIDC}
/*! @azure/msal-common v14.1.0 2023-10-05 */class dr extends ut{constructor(e,t,o){super(e,t,o),this.name="ServerError",Object.setPrototypeOf(this,dr.prototype)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class ur{static generateThrottlingStorageKey(e){return`${Fe}.${JSON.stringify(e)}`}static preProcess(e,o){const r=ur.generateThrottlingStorageKey(o),n=e.getThrottlingCache(r);if(n){if(n.throttleTime<Date.now())return void e.removeItem(r);throw new dr(n.errorCodes?.join(" ")||t.EMPTY_STRING,n.errorMessage,n.subError)}}static postProcess(e,t,o){if(ur.checkResponseStatus(o)||ur.checkResponseForRetryAfter(o)){const r={throttleTime:ur.calculateThrottleTime(parseInt(o.headers[l])),error:o.body.error,errorCodes:o.body.error_codes,errorMessage:o.body.error_description,subError:o.body.suberror};e.setThrottlingCache(ur.generateThrottlingStorageKey(t),r)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&(e.headers.hasOwnProperty(l)&&(e.status<200||e.status>=300))}static calculateThrottleTime(e){const t=e<=0?0:e,o=Date.now()/1e3;return Math.floor(1e3*Math.min(o+(t||De),o+xe))}static removeThrottle(e,t,o,r){const n={clientId:t,authority:o.authority,scopes:o.scopes,homeAccountIdentifier:r,claims:o.claims,authenticationScheme:o.authenticationScheme,resourceRequestMethod:o.resourceRequestMethod,resourceRequestUri:o.resourceRequestUri,shrClaims:o.shrClaims,sshKid:o.sshKid},i=this.generateThrottlingStorageKey(n);e.removeItem(i)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class gr{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,o){let r;ur.preProcess(this.cacheManager,e);try{r=await this.networkClient.sendPostRequestAsync(t,o)}catch(e){throw e instanceof ut?e:ao(vt)}return ur.postProcess(this.cacheManager,e,r),r}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const pr="home_account_id",mr="UPN";
/*! @azure/msal-common v14.1.0 2023-10-05 */class fr{static validateRedirectUri(e){if(!e)throw Fo(mo)}static validatePrompt(e){const t=[];for(const e in de)t.push(de[e]);if(t.indexOf(e)<0)throw Fo(Io)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Fo(To)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Fo(So);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([me.PLAIN,me.S256].indexOf(e)<0)throw Fo(Ao)}static sanitizeEQParams(e,t){return e?(t.forEach(((t,o)=>{e[o]&&delete e[o]})),Object.fromEntries(Object.entries(e).filter((e=>""!==e[1])))):{}}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class yr{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(b,encodeURIComponent(t.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(b,encodeURIComponent(`${t.TOKEN_RESPONSE_TYPE} ${t.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(E,encodeURIComponent(e||ye.QUERY))}addNativeBroker(){this.parameters.set(ae,encodeURIComponent("1"))}addScopes(e,t=!0,o=s){!t||o.includes("openid")||e.includes("openid")||o.push("openid");const r=t?[...e||[],...o]:e||[],n=new zo(r);this.parameters.set(M,encodeURIComponent(n.printScopes()))}addClientId(e){this.parameters.set(A,encodeURIComponent(e))}addRedirectUri(e){fr.validateRedirectUri(e),this.parameters.set(S,encodeURIComponent(e))}addPostLogoutRedirectUri(e){fr.validateRedirectUri(e),this.parameters.set(V,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(J,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(pe,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(ge,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(h,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(h,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(ue,encodeURIComponent(e))}addClaims(e,t){const o=this.addClientCapabilitiesToClaims(e,t);fr.validateClaims(o),this.parameters.set(P,encodeURIComponent(o))}addCorrelationId(e){this.parameters.set(x,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(F,e.sku),this.parameters.set(K,e.version),e.os&&this.parameters.set(z,e.os),e.cpu&&this.parameters.set(G,e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set(Y,e.appName),e?.appVersion&&this.parameters.set(W,e.appVersion)}addPrompt(e){fr.validatePrompt(e),this.parameters.set(`${H}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(O,encodeURIComponent(e))}addNonce(e){this.parameters.set(q,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(fr.validateCodeChallengeParams(e,t),!e||!t)throw Fo(So);this.parameters.set(U,encodeURIComponent(e)),this.parameters.set(B,encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set(L,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(X,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(N,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(D,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(Z,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(ee,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(te,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(ne,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(ie,encodeURIComponent(e))}addGrantType(e){this.parameters.set(R,encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){const t=fr.sanitizeEQParams(e,this.parameters);Object.keys(t).forEach((t=>{this.parameters.set(t,e[t])}))}addClientCapabilitiesToClaims(e,t){let o;if(e)try{o=JSON.parse(e)}catch(e){throw Fo(To)}else o={};return t&&t.length>0&&(o.hasOwnProperty(le)||(o[le]={}),o[le][he]={values:t}),JSON.stringify(o)}addUsername(e){this.parameters.set($e,encodeURIComponent(e))}addPassword(e){this.parameters.set(je,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(oe,Be.POP),this.parameters.set(re,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(oe,Be.SSH),this.parameters.set(re,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set($,e.generateCurrentRequestHeaderValue()),this.parameters.set(j,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(Q,Ke)}addLogoutHint(e){this.parameters.set(ce,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach(((t,o)=>{e.push(`${o}=${t}`)})),e.join("&")}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const Cr={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",BaseClientExecutePostToTokenEndpoint:"baseClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponseFromHash:"handleCodeResponseFromHash",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromiseMeasurement",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},vr=1,wr=2,Ir=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status"]);
/*! @azure/msal-common v14.1.0 2023-10-05 */
class Tr{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:o,cacheOptions:r,storageInterface:n,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:h,persistencePlugin:d,serializableCache:u}){const g={...rr,...o};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:cr,skipAuthorityMetadataCache:!1,...p}),systemOptions:{...or,...t},loggerOptions:g,cacheOptions:{...nr,...r},storageInterface:n||new tr(e.clientId,co,new ho(g)),networkInterface:i||ir,cryptoInterface:s||co,clientCredentials:a||ar,libraryInfo:{...sr,...c},telemetry:{...lr,...l},serverTelemetryManager:h||null,persistencePlugin:d||null,serializableCache:u||null};var p}(e),this.logger=new ho(this.config.loggerOptions,uo,go),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new gr(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const o={};if(o[c]=t.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case pr:try{const t=$o(e.credential);o[h]=`Oid:${t.uid}@${t.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case mr:o[h]=`UPN: ${e.credential}`}return o}async executePostToTokenEndpoint(e,t,o,r,n){this.performanceClient?.addQueueMeasurement(Cr.BaseClientExecutePostToTokenEndpoint,n);const i=await this.networkManager.sendPostRequest(r,e,{body:t,headers:o});return this.performanceClient?.addFields({refreshTokenSize:i.body.refresh_token?.length||0,httpVerToken:i.headers?.[p]||""},n),this.config.serverTelemetryManager&&i.status<500&&429!==i.status&&this.config.serverTelemetryManager.clearTelemetryCache(),i}updateAuthority(e){if(!e.discoveryComplete())throw ao(Ct);this.authority=e}createTokenQueryParameters(e){const t=new yr;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class _r{generateAccountId(){return _r.generateAccountIdForCacheKey(this.homeAccountId,this.environment)}generateCredentialId(){return _r.generateCredentialIdForCacheKey(this.credentialType,this.clientId,this.realm,this.familyId)}generateTarget(){return _r.generateTargetForCacheKey(this.target)}generateCredentialKey(){return _r.generateCredentialCacheKey(this.homeAccountId,this.environment,this.credentialType,this.clientId,this.realm,this.target,this.familyId,this.tokenType,this.requestedClaimsHash)}generateType(){switch(this.credentialType){case Ae.ID_TOKEN:return Ee;case Ae.ACCESS_TOKEN:case Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME:return Se;case Ae.REFRESH_TOKEN:return be;default:throw ao(zt)}}static generateCredentialCacheKey(e,t,o,r,n,i,s,a,c){return[this.generateAccountIdForCacheKey(e,t),this.generateCredentialIdForCacheKey(o,r,n,s),this.generateTargetForCacheKey(i),this.generateClaimsHashForCacheKey(c),this.generateSchemeForCacheKey(a)].join(_e).toLowerCase()}static generateAccountIdForCacheKey(e,t){return[e,t].join(_e).toLowerCase()}static generateCredentialIdForCacheKey(e,o,r,n){return[e,e===Ae.REFRESH_TOKEN&&n||o,r||t.EMPTY_STRING].join(_e).toLowerCase()}static generateTargetForCacheKey(e){return(e||t.EMPTY_STRING).toLowerCase()}static generateClaimsHashForCacheKey(e){return(e||t.EMPTY_STRING).toLowerCase()}static generateSchemeForCacheKey(e){return e&&e.toLowerCase()!==Be.BEARER.toLowerCase()?e.toLowerCase():t.EMPTY_STRING}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class kr extends _r{static createIdTokenEntity(e,t,o,r,n){const i=new kr;return i.credentialType=Ae.ID_TOKEN,i.homeAccountId=e,i.environment=t,i.clientId=r,i.secret=o,i.realm=n,i}static isIdTokenEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.credentialType===Ae.ID_TOKEN)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Ar{static nowSeconds(){return Math.round((new Date).getTime()/1e3)}static isTokenExpired(e,t){const o=Number(e)||0;return Ar.nowSeconds()+t>o}static wasClockTurnedBack(e){return Number(e)>Ar.nowSeconds()}static delay(e,t){return new Promise((o=>setTimeout((()=>o(t)),e)))}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Sr extends _r{static createAccessTokenEntity(e,t,o,r,n,i,s,a,c,l,h,d,u,g,p){const m=new Sr;m.homeAccountId=e,m.credentialType=Ae.ACCESS_TOKEN,m.secret=o;const f=Ar.nowSeconds();if(m.cachedAt=f.toString(),m.expiresOn=s.toString(),m.extendedExpiresOn=a.toString(),l&&(m.refreshOn=l.toString()),m.environment=t,m.clientId=r,m.realm=n,m.target=i,m.userAssertionHash=d,m.tokenType=h||Be.BEARER,g&&(m.requestedClaims=g,m.requestedClaimsHash=p),m.tokenType?.toLowerCase()!==Be.BEARER.toLowerCase())switch(m.credentialType=Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME,m.tokenType){case Be.POP:const e=Xo(o,c.base64Decode);if(!e?.cnf?.kid)throw ao(Yt);m.keyId=e.cnf.kid;break;case Be.SSH:m.keyId=u}return m}static isAccessTokenEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.hasOwnProperty("target")&&(e.credentialType===Ae.ACCESS_TOKEN||e.credentialType===Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME))}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class br extends _r{static createRefreshTokenEntity(e,t,o,r,n,i){const s=new br;return s.clientId=r,s.credentialType=Ae.REFRESH_TOKEN,s.environment=t,s.homeAccountId=e,s.secret=o,s.userAssertionHash=i,n&&(s.familyId=n),s}static isRefreshTokenEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")&&e.credentialType===Ae.REFRESH_TOKEN)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const Er="no_tokens_found",Rr="native_account_unavailable",Pr="interaction_required",Mr="consent_required",Nr="login_required";var Or=Object.freeze({__proto__:null,consentRequired:Mr,interactionRequired:Pr,loginRequired:Nr,nativeAccountUnavailable:Rr,noTokensFound:Er});
/*! @azure/msal-common v14.1.0 2023-10-05 */const qr=[Pr,Mr,Nr],Hr=["message_only","additional_action","basic_action","user_password_expired","consent_required"],Lr={[Er]:"No refresh token found in the cache. Please sign-in.",[Rr]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API."},Ur={noTokensFoundError:{code:Er,desc:Lr[Er]},native_account_unavailable:{code:Rr,desc:Lr[Rr]}};class Br extends ut{constructor(e,o,r,n,i,s,a){super(e,o,r),Object.setPrototypeOf(this,Br.prototype),this.timestamp=n||t.EMPTY_STRING,this.traceId=i||t.EMPTY_STRING,this.correlationId=s||t.EMPTY_STRING,this.claims=a||t.EMPTY_STRING,this.name="InteractionRequiredAuthError"}}function Dr(e,t,o){const r=!!e&&qr.indexOf(e)>-1,n=!!o&&Hr.indexOf(o)>-1,i=!!t&&qr.some((e=>t.indexOf(e)>-1));return r||i||n}function xr(e){return new Br(e,Lr[e])}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Fr{constructor(e,t,o,r,n){this.account=e||null,this.idToken=t||null,this.accessToken=o||null,this.refreshToken=r||null,this.appMetadata=n||null}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Kr{static setRequestState(e,o,r){const n=Kr.generateLibraryState(e,r);return o?`${n}${t.RESOURCE_DELIM}${o}`:n}static generateLibraryState(e,t){if(!e)throw ao(Kt);const o={id:e.createNewGuid()};t&&(o.meta=t);const r=JSON.stringify(o);return e.base64Encode(r)}static parseRequestState(e,o){if(!e)throw ao(Kt);if(!o)throw ao(Tt);try{const r=o.split(t.RESOURCE_DELIM),n=r[0],i=r.length>1?r.slice(1).join(t.RESOURCE_DELIM):t.EMPTY_STRING,s=e.base64Decode(n),a=JSON.parse(s);return{userRequestState:i||t.EMPTY_STRING,libraryState:a}}catch(e){throw ao(Tt)}}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class zr{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Fo(vo);this.getHash()||(this._urlString=zr.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Ko.endsWith(t,"?")?t=t.slice(0,-1):Ko.endsWith(t,"?/")&&(t=t.slice(0,-2)),Ko.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Fo(Co)}if(!e.HostNameAndPort||!e.PathSegments)throw Fo(Co);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Fo(yo)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return zr.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),o=t.PathSegments;return!e||0===o.length||o[0]!==T&&o[0]!==_||(o[0]=e),zr.constructAuthorityUriFromObject(t)}getHash(){return zr.parseHash(this.urlString)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Fo(Co);const o={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let r=o.AbsolutePath.split("/");return r=r.filter((e=>e&&e.length>0)),o.PathSegments=r,o.QueryString&&o.QueryString.endsWith("/")&&(o.QueryString=o.QueryString.substring(0,o.QueryString.length-1)),o}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),o=e.match(t);if(!o)throw Fo(Co);return o[2]}static getAbsoluteUrl(e,o){if(e[0]===t.FORWARD_SLASH){const t=new zr(o).getUrlComponents();return t.Protocol+"//"+t.HostNameAndPort+e}return e}static parseHash(e){const o=e.indexOf("#"),r=e.indexOf("#/");return r>-1?e.substring(r+2):o>-1?e.substring(o+1):t.EMPTY_STRING}static parseQueryString(e){const o=e.indexOf("?"),r=e.indexOf("/?");return r>-1?e.substring(r+2):o>-1?e.substring(o+1):t.EMPTY_STRING}static parseQueryServerResponse(e){const o=e.indexOf("?code"),r=e.indexOf("/?code"),n=e.indexOf("#");return r>-1&&n>-1?e.substring(r+2,n):r>-1?e.substring(r+2):o>-1&&n>-1?e.substring(o+1,n):o>-1?e.substring(o+1):t.EMPTY_STRING}static constructAuthorityUriFromObject(e){return new zr(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static getDeserializedHash(e){if(!e)return{};const t=zr.parseHash(e),o=Ko.queryStringToObject(t||e);if(!o)throw ao(It);return o}static getDeserializedQueryString(e){if(!e)return{};const t=zr.parseQueryString(e),o=Ko.queryStringToObject(t||e);if(!o)throw ao(It);return o}static getDeserializedCodeResponse(e,t){const o=new zr(t);let r;return r=e===fe.QUERY?zr.getDeserializedQueryString(t):zr.getDeserializedHash(o.getHash()),r}static hashContainsKnownProperties(e){if(!e||e.indexOf("=")<0)return!1;const t=zr.getDeserializedHash(e);return!!(t.code||t.error_description||t.error||t.state)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const Gr=(e,t,o,r,n)=>(...i)=>{o.trace(`Executing function ${t}`);const s=r?.startMeasurement(t,n);try{const r=e(...i);return s?.end({success:!0}),o.trace(`Returning result from ${t}`),r}catch(e){o.trace(`Error occurred in ${t}`);try{o.trace(JSON.stringify(e))}catch(e){o.trace("Unable to print error message.")}throw s?.end({success:!1}),e}},$r=(e,t,o,r,n)=>(...i)=>{o.trace(`Executing function ${t}`);const s=r?.startMeasurement(t,n);return r?.setPreQueueTime(t,n),e(...i).then((e=>(o.trace(`Returning result from ${t}`),s?.end({success:!0}),e))).catch((e=>{o.trace(`Error occurred in ${t}`);try{o.trace(JSON.stringify(e))}catch(e){o.trace("Unable to print error message.")}throw s?.end({success:!1}),e}))},jr="sw";class Qr{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(Cr.PopTokenGenerateCnf,e.correlationId);const o=await $r(this.generateKid.bind(this),Cr.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),r=this.cryptoUtils.base64Encode(JSON.stringify(o));return{kid:o.kid,reqCnfString:r,reqCnfHash:await this.cryptoUtils.hashString(r)}}async generateKid(e){this.performanceClient?.addQueueMeasurement(Cr.PopTokenGenerateKid,e.correlationId);return{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:jr}}async signPopToken(e,t,o){return this.signPayload(e,t,o)}async signPayload(e,t,o,r){const{resourceRequestMethod:n,resourceRequestUri:i,shrClaims:s,shrNonce:a}=o,c=i?new zr(i):void 0,l=c?.getUrlComponents();return await this.cryptoUtils.signJwt({at:e,ts:Ar.nowSeconds(),m:n?.toUpperCase(),u:l?.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:l?.AbsolutePath,q:l?.QueryString?[[],l.QueryString]:void 0,client_claims:s||void 0,...r},t,o.correlationId)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Yr{generateAppMetadataKey(){return Yr.generateAppMetadataCacheKey(this.environment,this.clientId)}static generateAppMetadataCacheKey(e,t){return[Re,e,t].join(_e).toLowerCase()}static createAppMetadataEntity(e,t,o){const r=new Yr;return r.clientId=e,r.environment=t,o&&(r.familyId=o),r}static isAppMetadataEntity(e,t){return!!t&&(0===e.indexOf(Re)&&t.hasOwnProperty("clientId")&&t.hasOwnProperty("environment"))}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Wr{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Vr{constructor(e,t,o,r,n,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=o,this.logger=r,this.serializableCache=n,this.persistencePlugin=i,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,o,r){if(!e.state||!o)throw e.state?ao(kt,"Cached State"):ao(kt,"Server State");let n,i;try{n=decodeURIComponent(e.state)}catch(t){throw ao(Tt,e.state)}try{i=decodeURIComponent(o)}catch(t){throw ao(Tt,e.state)}if(n!==i)throw ao(_t);if(e.error||e.error_description||e.suberror){if(Dr(e.error,e.error_description,e.suberror))throw new Br(e.error||t.EMPTY_STRING,e.error_description,e.suberror,e.timestamp||t.EMPTY_STRING,e.trace_id||t.EMPTY_STRING,e.correlation_id||t.EMPTY_STRING,e.claims||t.EMPTY_STRING);throw new dr(e.error||t.EMPTY_STRING,e.error_description,e.suberror)}e.client_info&&Go(e.client_info,r)}validateTokenResponse(e,s){if(e.error||e.error_description||e.suberror){const a=`${e.error_codes} - [${e.timestamp}]: ${e.error_description} - Correlation ID: ${e.correlation_id} - Trace ID: ${e.trace_id}`,c=new dr(e.error,a,e.suberror);if(s&&e.status&&e.status>=n&&e.status<=i)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${c}`);if(s&&e.status&&e.status>=o&&e.status<=r)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${c}`);if(Dr(e.error,e.error_description,e.suberror))throw new Br(e.error,e.error_description,e.suberror,e.timestamp||t.EMPTY_STRING,e.trace_id||t.EMPTY_STRING,e.correlation_id||t.EMPTY_STRING,e.claims||t.EMPTY_STRING);throw c}}async handleServerTokenResponse(e,o,r,n,i,s,a,c,l){let h,d;if(this.performanceClient?.addQueueMeasurement(Cr.HandleServerTokenResponse,e.correlation_id),e.id_token){if(h=Xo(e.id_token||t.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&h.nonce!==i.nonce)throw ao(At);if(n.maxAge||0===n.maxAge){const e=h.auth_time;if(!e)throw ao(St);Zo(e,n.maxAge)}}this.homeAccountIdentifier=Jo.generateHomeAccountId(e.client_info||t.EMPTY_STRING,o.authorityType,this.logger,this.cryptoObj,h),i&&i.state&&(d=Kr.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||n.sshKid||void 0;const u=this.generateCacheRecord(e,o,r,n,h,s,i);let g;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),g=new Wr(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(g)),a&&!c&&u.account){const e=u.account.generateAccountKey();if(!this.cacheStorage.getAccount(e))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),Vr.generateAuthenticationResult(this.cryptoObj,o,u,!1,n,h,d,void 0,l)}await this.cacheStorage.saveCacheRecord(u,n.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&g&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(g))}return Vr.generateAuthenticationResult(this.cryptoObj,o,u,!1,n,h,d,e,l)}generateCacheRecord(e,o,r,n,i,s,a){const c=o.getPreferredCache();if(!c)throw ao(xt);let l,h;e.id_token&&i&&(l=kr.createIdTokenEntity(this.homeAccountIdentifier,c,e.id_token,this.clientId,i.tid||""),h=Jo.createAccount({homeAccountId:this.homeAccountIdentifier,idTokenClaims:i,clientInfo:e.client_info,cloudGraphHostName:a?.cloud_graph_host_name,msGraphHost:a?.msgraph_host},o));let d=null;if(e.access_token){const a=e.scope?zo.fromString(e.scope):new zo(n.scopes||[]),l=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,u=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,g=r+l,p=g+h,m=u&&u>0?r+u:void 0;d=Sr.createAccessTokenEntity(this.homeAccountIdentifier,c,e.access_token||t.EMPTY_STRING,this.clientId,i?.tid||o.tenant,a.printScopes(),g,p,this.cryptoObj,m,e.token_type,s,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;e.refresh_token&&(u=br.createRefreshTokenEntity(this.homeAccountIdentifier,c,e.refresh_token||t.EMPTY_STRING,this.clientId,e.foci,s));let g=null;return e.foci&&(g=Yr.createAppMetadataEntity(this.clientId,c,e.foci)),new Fr(h,l,d,u,g)}static async generateAuthenticationResult(e,o,r,n,i,s,a,c,l){let h,d,u=t.EMPTY_STRING,g=[],p=null,m=t.EMPTY_STRING;if(r.accessToken){if(r.accessToken.tokenType===Be.POP){const t=new Qr(e),{secret:o,keyId:n}=r.accessToken;if(!n)throw ao(Xt);u=await t.signPopToken(o,n,i)}else u=r.accessToken.secret;g=zo.fromString(r.accessToken.target).asArray(),p=new Date(1e3*Number(r.accessToken.expiresOn)),h=new Date(1e3*Number(r.accessToken.extendedExpiresOn)),r.accessToken.refreshOn&&(d=new Date(1e3*Number(r.accessToken.refreshOn)))}r.appMetadata&&(m=r.appMetadata.familyId===Pe?Pe:"");const f=s?.oid||s?.sub||"",y=s?.tid||"";return c?.spa_accountid&&r.account&&(r.account.nativeAccountId=c?.spa_accountid),{authority:o.canonicalAuthority,uniqueId:f,tenantId:y,scopes:g,account:r.account?r.account.getAccountInfo():null,idToken:r?.idToken?.secret||"",idTokenClaims:s||{},accessToken:u,fromCache:n,expiresOn:p,extExpiresOn:h,refreshOn:d,correlationId:i.correlationId,requestId:l||t.EMPTY_STRING,familyId:m,tokenType:r.accessToken?.tokenType||t.EMPTY_STRING,state:a?a.userRequestState:t.EMPTY_STRING,cloudGraphHostName:r.account?.cloudGraphHostName||t.EMPTY_STRING,msGraphHost:r.account?.msGraphHost||t.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Jr extends Tr{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(Cr.GetAuthCodeUrl,e.correlationId);const t=await $r(this.createAuthCodeUrlQueryString.bind(this),Cr.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return zr.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(Cr.AuthClientAcquireToken,e.correlationId),!e.code)throw ao(Mt);const o=Ar.nowSeconds(),r=await $r(this.executeTokenRequest.bind(this),Cr.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),n=r.headers?.[g],i=new Vr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(r.body),$r(i.handleServerTokenResponse.bind(i),Cr.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,o,e,t,void 0,void 0,void 0,n)}handleFragmentResponse(e,t){const o=new Vr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null),r=zr.getDeserializedCodeResponse(this.config.authOptions.authority.options.OIDCOptions?.serverResponseType,e);if(o.validateServerAuthorizationCodeResponse(r,t,this.cryptoUtils),!r.code)throw ao(Wt);return{...r,code:r.code}}getLogoutUri(e){if(!e)throw Fo(ko);const t=this.createLogoutUrlQueryString(e);return zr.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Cr.AuthClientExecuteTokenRequest,t.correlationId);const o=this.createTokenQueryParameters(t),r=zr.appendQueryString(e.tokenEndpoint,o),n=await $r(this.createTokenRequestBody.bind(this),Cr.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const e=Go(t.clientInfo,this.cryptoUtils);i={credential:`${e.uid}${ke}${e.utid}`,type:pr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),a={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return $r(this.executePostToTokenEndpoint.bind(this),Cr.BaseClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(r,n,s,a,t.correlationId)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Cr.AuthClientCreateTokenRequestBody,e.correlationId);const t=new yr;if(t.addClientId(e.tokenBodyParameters?.[A]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):fr.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!hr(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;t.addClientAssertion(e.assertion),t.addClientAssertionType(e.assertionType)}if(t.addGrantType(Ce),t.addClientInfo(),e.authenticationScheme===Be.POP){const o=new Qr(this.cryptoUtils,this.performanceClient),r=await $r(o.generateCnf.bind(o),Cr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(r.reqCnfString)}else if(e.authenticationScheme===Be.SSH){if(!e.sshJwk)throw Fo(Po);t.addSshJwk(e.sshJwk)}const o=e.correlationId||this.config.cryptoInterface.createNewGuid();let r;if(t.addCorrelationId(o),(!Ko.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=Go(e.clientInfo,this.cryptoUtils);r={credential:`${t.uid}${ke}${t.utid}`,type:pr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case pr:try{const e=$o(r.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case mr:t.addCcsUpn(r.credential)}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[se]||t.addExtraQueryParameters({[se]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(Cr.AuthClientCreateQueryString,e.correlationId);const t=new yr;t.addClientId(e.extraQueryParameters?.[A]||this.config.authOptions.clientId);const o=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(o,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const r=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(r),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),hr(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==de.SELECT_ACCOUNT)if(e.sid&&e.prompt===de.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const o=this.extractAccountSid(e.account),r=this.extractLoginHint(e.account);if(r){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(r);try{const o=$o(e.account.homeAccountId);t.addCcsOid(o)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(o&&e.prompt===de.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(o);try{const o=$o(e.account.homeAccountId);t.addCcsOid(o)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const o=$o(e.account.homeAccountId);t.addCcsOid(o)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===Be.POP)){const o=new Qr(this.cryptoUtils),r=await $r(o.generateCnf.bind(o),Cr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(r.reqCnfHash)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new yr;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Xr extends Tr{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Cr.RefreshTokenClientAcquireToken,e.correlationId);const t=Ar.nowSeconds(),o=await $r(this.executeTokenRequest.bind(this),Cr.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),r=o.headers?.[g],n=new Vr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return n.validateTokenResponse(o.body),$r(n.handleServerTokenResponse.bind(n),Cr.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,r)}async acquireTokenByRefreshToken(e){if(!e)throw Fo(_o);if(this.performanceClient?.addQueueMeasurement(Cr.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw ao(Bt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return $r(this.acquireTokenWithCachedRefreshToken.bind(this),Cr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const o=t instanceof Br&&t.errorCode===Er,r=t instanceof dr&&t.errorCode===ze&&t.subError===Ge;if(o||r)return $r(this.acquireTokenWithCachedRefreshToken.bind(this),Cr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return $r(this.acquireTokenWithCachedRefreshToken.bind(this),Cr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(Cr.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const o=this.cacheManager.getRefreshToken(e.account,t);if(!o)throw xr(Er);const r={...e,refreshToken:o.secret,authenticationScheme:e.authenticationScheme||Be.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:pr}};return $r(this.acquireToken.bind(this),Cr.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(r)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Cr.RefreshTokenClientExecuteTokenRequest,e.correlationId);const o=this.createTokenQueryParameters(e),r=zr.appendQueryString(t.tokenEndpoint,o),n=await $r(this.createTokenRequestBody.bind(this),Cr.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return $r(this.executePostToTokenEndpoint.bind(this),Cr.BaseClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(r,n,i,s,e.correlationId)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(Cr.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,o=new yr;if(o.addClientId(e.tokenBodyParameters?.[A]||this.config.authOptions.clientId),e.redirectUri&&o.addRedirectUri(e.redirectUri),o.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),o.addGrantType(ve),o.addClientInfo(),o.addLibraryInfo(this.config.libraryInfo),o.addApplicationTelemetry(this.config.telemetry.application),o.addThrottling(),this.serverTelemetryManager&&!hr(this.config)&&o.addServerTelemetry(this.serverTelemetryManager),o.addCorrelationId(t),o.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&o.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const e=this.config.clientCredentials.clientAssertion;o.addClientAssertion(e.assertion),o.addClientAssertionType(e.assertionType)}if(e.authenticationScheme===Be.POP){const t=new Qr(this.cryptoUtils,this.performanceClient),r=await $r(t.generateCnf.bind(t),Cr.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);o.addPopToken(r.reqCnfString)}else if(e.authenticationScheme===Be.SSH){if(!e.sshJwk)throw Fo(Po);o.addSshJwk(e.sshJwk)}if((!Ko.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&o.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case pr:try{const t=$o(e.ccsCredential.credential);o.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case mr:o.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&o.addExtraQueryParameters(e.tokenBodyParameters),o.createQueryString()}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Zr extends Tr{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,o]=await this.acquireCachedToken(e);if(o===it){this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.");new Xr(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch((()=>{}))}return t}catch(t){if(t instanceof so&&t.errorCode===jt){return new Xr(this.config,this.performanceClient).acquireTokenByRefreshToken(e)}throw t}}async acquireCachedToken(e){let t=tt;if(!e)throw Fo(_o);if(e.forceRefresh)throw t=ot,this.serverTelemetryManager?.setCacheOutcome(ot),this.logger.info("SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true."),ao(jt);if(!this.config.cacheOptions.claimsBasedCachingEnabled&&!Ko.isEmptyObj(e.claims))throw t=ot,this.logger.info("SilentFlowClient:acquireCachedToken - Skipping cache because claims-based caching is disabled and claims were requested."),ao(jt);if(!e.account)throw ao(Bt);const o=e.authority||this.authority.getPreferredCache(),r=this.cacheManager.readCacheRecord(e.account,e,o);if(!r.accessToken)throw t=rt,this.serverTelemetryManager?.setCacheOutcome(rt),this.logger.info("SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties."),ao(jt);if(Ar.wasClockTurnedBack(r.accessToken.cachedAt)||Ar.isTokenExpired(r.accessToken.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw t=nt,this.serverTelemetryManager?.setCacheOutcome(nt),this.logger.info(`SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`),ao(jt);return r.accessToken.refreshOn&&Ar.isTokenExpired(r.accessToken.refreshOn,0)&&(t=it,this.serverTelemetryManager?.setCacheOutcome(it),this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.")),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await this.generateResultFromCacheRecord(r,e),t]}async generateResultFromCacheRecord(e,t){let o;if(e.idToken&&(o=Xo(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=o?.auth_time;if(!e)throw ao(St);Zo(e,t.maxAge)}return await Vr.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,o)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */
/*! @azure/msal-common v14.1.0 2023-10-05 */
const en={"https://login.microsoftonline.com/common/":{token_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/common/":{token_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/common/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/common/":{token_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/consumers/":{token_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/consumers/":{token_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/consumers/":{token_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/organizations/":{token_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/organizations/":{token_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/organizations/":{token_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"}},tn={"https://login.microsoftonline.com/common/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/common/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/common/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.com/consumers/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/consumers/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/consumers/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.com/organizations/":{tenant_discovery_endpoint:"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.chinacloudapi.cn/organizations/":{tenant_discovery_endpoint:"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},"https://login.microsoftonline.us/organizations/":{tenant_discovery_endpoint:"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},on=new Set;for(const e in tn)for(const t of tn[e].metadata)for(const e of t.aliases)on.add(e);
/*! @azure/msal-common v14.1.0 2023-10-05 */class rn{constructor(){this.expiresAt=Ar.nowSeconds()+Ne}updateCloudDiscoveryMetadata(e,t){this.aliases=e.aliases,this.preferred_cache=e.preferred_cache,this.preferred_network=e.preferred_network,this.aliasesFromNetwork=t}updateEndpointMetadata(e,t){this.authorization_endpoint=e.authorization_endpoint,this.token_endpoint=e.token_endpoint,this.end_session_endpoint=e.end_session_endpoint,this.issuer=e.issuer,this.endpointsFromNetwork=t,this.jwks_uri=e.jwks_uri}updateCanonicalAuthority(e){this.canonical_authority=e}resetExpiresAt(){this.expiresAt=Ar.nowSeconds()+Ne}isExpired(){return this.expiresAt<=Ar.nowSeconds()}static isAuthorityMetadataEntity(e,t){return!!t&&(0===e.indexOf(Me)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri"))}}
/*! @azure/msal-common v14.1.0 2023-10-05 */
/*! @azure/msal-common v14.1.0 2023-10-05 */
class nn{constructor(e,t,o,r){this.networkInterface=e,this.logger=t,this.performanceClient=o,this.correlationId=r}async detectRegion(e,o){this.performanceClient?.addQueueMeasurement(Cr.RegionDiscoveryDetectRegion,this.correlationId);let r=e;if(r)o.region_source=Ve;else{const e=nn.IMDS_OPTIONS;try{const n=await $r(this.getRegionFromIMDS.bind(this),Cr.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(t.IMDS_VERSION,e);if(n.status===Qe&&(r=n.body,o.region_source=Je),n.status===Ye){const t=await $r(this.getCurrentVersion.bind(this),Cr.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!t)return o.region_source=We,null;const n=await $r(this.getRegionFromIMDS.bind(this),Cr.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(t,e);n.status===Qe&&(r=n.body,o.region_source=Je)}}catch(e){return o.region_source=We,null}}return r||(o.region_source=We),r||null}async getRegionFromIMDS(e,o){return this.performanceClient?.addQueueMeasurement(Cr.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${t.IMDS_ENDPOINT}?api-version=${e}&format=text`,o,t.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(Cr.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const o=await this.networkInterface.sendGetRequestAsync(`${t.IMDS_ENDPOINT}?format=json`,e);return o.status===Ye&&o.body&&o.body["newest-versions"]&&o.body["newest-versions"].length>0?o.body["newest-versions"][0]:null}catch(e){return null}}}nn.IMDS_OPTIONS={headers:{Metadata:"true"}};
/*! @azure/msal-common v14.1.0 2023-10-05 */
class sn{constructor(e,t,o,r,n,i,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=o,this.authorityOptions=r,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=n,this.performanceClient=i,this.correlationId=s,this.regionDiscovery=new nn(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(t.CIAM_AUTH_URL))return Wo;const o=e.PathSegments;if(o.length)switch(o[0].toLowerCase()){case t.ADFS:return Qo;case t.DSTS:return Yo}return jo}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new zr(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw ao(Ct)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw ao(Ct)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw ao(Ct)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw ao(Jt);return this.replacePath(this.metadata.end_session_endpoint)}throw ao(Ct)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw ao(Ct)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw ao(Ct)}canReplaceTenant(e){return 1===e.PathSegments.length&&!sn.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===jo&&this.protocolMode===Vo.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new zr(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,n)=>{let i=r[n];if(0===n&&this.canReplaceTenant(o)){const e=new zr(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Qo||this.protocolMode!==Vo.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(Cr.AuthorityResolveEndpointsAsync,this.correlationId);let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);e||(e=new rn,e.updateCanonicalAuthority(this.canonicalAuthority));const t=await $r(this.updateCloudDiscoveryMetadata.bind(this),Cr.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const o=await $r(this.updateEndpointMetadata.bind(this),Cr.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);t!==qe&&o!==qe&&(e.resetExpiresAt(),e.updateCanonicalAuthority(this.canonicalAuthority));const r=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(r,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(Cr.AuthorityUpdateEndpointMetadata,this.correlationId),this.logger.verbose("Attempting to get endpoint metadata from authority configuration");let t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),e.updateEndpointMetadata(t,!1),Oe;if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{let t=this.getEndpointMetadataFromHardcodedValues();if(t)return this.logger.verbose("Found endpoint metadata from hardcoded values."),this.authorityOptions.azureRegionConfiguration?.azureRegion&&(t=await $r(this.updateMetadataWithRegionalInformation.bind(this),Cr.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t)),e.updateEndpointMetadata(t,!1),Le;this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const o=e.isExpired();if(this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!o)return this.logger.verbose("Found endpoint metadata in the cache."),qe;if(o&&this.logger.verbose("The metadata entity is expired."),t=await $r(this.getEndpointMetadataFromNetwork.bind(this),Cr.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)(),t)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(t=await $r(this.updateMetadataWithRegionalInformation.bind(this),Cr.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t)),e.updateEndpointMetadata(t,!0),He;throw ao(wt,this.defaultOpenIdConfigurationEndpoint)}isAuthoritySameType(e){return new zr(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Fo(Eo)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Cr.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const o=await this.networkInterface.sendGetRequestAsync(t,e),r=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(o.body);return r?o.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.canonicalAuthority in en?en[this.canonicalAuthority]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(Cr.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const o=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(o){if(o!==t.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=Xe,this.regionDiscoveryMetadata.region_used=o,sn.replaceWithRegionalInformation(e,o);const r=await $r(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),Cr.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(r)return this.regionDiscoveryMetadata.region_outcome=Ze,this.regionDiscoveryMetadata.region_used=r,sn.replaceWithRegionalInformation(e,r);this.regionDiscoveryMetadata.region_outcome=et}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(Cr.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId),this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||t.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||t.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||t.NOT_APPLICABLE}`);let o=this.getCloudDiscoveryMetadataFromConfig();if(o)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),e.updateCloudDiscoveryMetadata(o,!1),Oe;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=this.getCloudDiscoveryMetadataFromHardcodedValues();if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),e.updateCloudDiscoveryMetadata(t,!1),Le;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const r=e.isExpired();if(this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!r)return this.logger.verbose("Found cloud discovery metadata in the cache."),qe;if(r&&this.logger.verbose("The metadata entity is expired."),o=await $r(this.getCloudDiscoveryMetadataFromNetwork.bind(this),Cr.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)(),o)return e.updateCloudDiscoveryMetadata(o,!0),He;throw Fo(Ro)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Wo)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),sn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=sn.getCloudDiscoveryMetadataFromNetworkResponse(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Fo(bo)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),sn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Cr.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${t.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,o={};let r=null;try{const n=await this.networkInterface.sendGetRequestAsync(e,o);let i,s;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}
/*! @azure/msal-common v14.1.0 2023-10-05 */(n.body))i=n.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(n.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${n.status}`),i=n.body,i.error===t.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),r=sn.getCloudDiscoveryMetadataFromNetworkResponse(s,this.hostnameAndPort)}catch(e){if(e instanceof ut)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return r||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),r=sn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),r}getCloudDiscoveryMetadataFromHardcodedValues(){if(this.canonicalAuthority in tn){const e=tn[this.canonicalAuthority];return sn.getCloudDiscoveryMetadataFromNetworkResponse(e.metadata,this.hostnameAndPort)}return null}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>zr.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(e,o){let r;if(o&&o.azureCloudInstance!==po.None){const e=o.tenant?o.tenant:t.DEFAULT_COMMON_TENANT;r=`${o.azureCloudInstance}/${e}/`}return r||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}static getCloudDiscoveryMetadataFromNetworkResponse(e,t){for(let o=0;o<e.length;o++){const r=e[o];if(r.aliases.indexOf(t)>-1)return r}return null}getPreferredCache(){if(this.discoveryComplete())return this.metadata.preferred_cache;throw ao(Ct)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return on.has(e)}static isPublicCloudAuthority(e){return t.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,o,r){const n=new zr(e);n.validateAsUri();const i=n.getUrlComponents();let s=`${o}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${o}.${t.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=zr.constructAuthorityUriFromObject({...n.getUrlComponents(),HostNameAndPort:s}).urlString;return r?`${a}?${r}`:a}static replaceWithRegionalInformation(e,o){const r={...e};return r.authorization_endpoint=sn.buildRegionalAuthorityString(r.authorization_endpoint,o),r.token_endpoint=sn.buildRegionalAuthorityString(r.token_endpoint,o,t.REGIONAL_AUTH_NON_MSI_QUERY_STRING),r.end_session_endpoint&&(r.end_session_endpoint=sn.buildRegionalAuthorityString(r.end_session_endpoint,o)),r}static transformCIAMAuthority(e){let o=e.endsWith(t.FORWARD_SLASH)?e:`${e}${t.FORWARD_SLASH}`;const r=new zr(e).getUrlComponents();if(0===r.PathSegments.length&&r.HostNameAndPort.endsWith(t.CIAM_AUTH_URL)){o=`${o}${r.HostNameAndPort.split(".")[0]}${t.AAD_TENANT_DOMAIN_SUFFIX}`}return o}}sn.reservedTenantDomains=new Set(["{tenant}","{tenantid}",T,k,_]);
/*! @azure/msal-common v14.1.0 2023-10-05 */
class an{static async createDiscoveredInstance(e,t,o,r,n,i,s){i?.addQueueMeasurement(Cr.AuthorityFactoryCreateDiscoveredInstance,s);const a=sn.transformCIAMAuthority(e),c=an.createInstance(a,t,o,r,n,i,s);try{return await $r(c.resolveEndpointsAsync.bind(c),Cr.AuthorityResolveEndpointsAsync,n,i,s)(),c}catch(e){throw ao(Ct)}}static createInstance(e,t,o,r,n,i,s){if(!e)throw Fo(vo);return new sn(e,t,o,r,n,i,s)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class cn{constructor(){this.failedRequests=[],this.errors=[],this.cacheHits=0}static isServerTelemetryEntity(e,t){const o=0===e.indexOf(Ue.CACHE_KEY);let r=!0;return t&&(r=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),o&&r}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class ln{static isThrottlingEntity(e,t){let o=!1;e&&(o=0===e.indexOf(Fe));let r=!0;return t&&(r=t.hasOwnProperty("throttleTime")),o&&r}}
/*! @azure/msal-common v14.1.0 2023-10-05 */const hn={sendGetRequestAsync:()=>Promise.reject(ao(oo)),sendPostRequestAsync:()=>Promise.reject(ao(oo))},dn="missing_kid_error",un="missing_alg_error",gn={[dn]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[un]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};
/*! @azure/msal-common v14.1.0 2023-10-05 */class pn extends ut{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,pn.prototype)}}function mn(e){return new pn(e,gn[e])}
/*! @azure/msal-common v14.1.0 2023-10-05 */class fn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw mn(dn);if(!e.alg)throw mn(un);const t=new fn({typ:e.typ||st,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}
/*! @azure/msal-common v14.1.0 2023-10-05 */
/*! @azure/msal-common v14.1.0 2023-10-05 */
class yn{constructor(e,o){this.cacheOutcome=tt,this.cacheManager=o,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||t.EMPTY_STRING,this.wrapperVer=e.wrapperVer||t.EMPTY_STRING,this.telemetryCacheKey=Ue.CACHE_KEY+_e+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${Ue.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer].join(Ue.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(Ue.VALUE_SEPARATOR);return[Ue.SCHEMA_VERSION,o,t].join(Ue.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=yn.maxErrorsToSend(e),o=e.failedRequests.slice(0,2*t).join(Ue.VALUE_SEPARATOR),r=e.errors.slice(0,t).join(Ue.VALUE_SEPARATOR),n=e.errors.length,i=[n,t<n?Ue.OVERFLOW_TRUE:Ue.OVERFLOW_FALSE].join(Ue.VALUE_SEPARATOR);return[Ue.SCHEMA_VERSION,e.cacheHits,o,r,i].join(Ue.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=Ue.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof ut?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(Ue.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e=new cn;return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=yn.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o=new cn;o.failedRequests=e.failedRequests.slice(2*t),o.errors=e.errors.slice(t),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let o,r=0,n=0;const i=e.errors.length;for(o=0;o<i;o++){const i=e.failedRequests[2*o]||t.EMPTY_STRING,s=e.failedRequests[2*o+1]||t.EMPTY_STRING,a=e.errors[o]||t.EMPTY_STRING;if(n+=i.toString().length+s.toString().length+a.length+3,!(n<Ue.MAX_LAST_HEADER_BYTES))break;r+=1}return r}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||t.EMPTY_STRING),e.push(this.regionSource||t.EMPTY_STRING),e.push(this.regionOutcome||t.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class Cn{constructor(e,t,o,r,n,i,s){this.authority=t,this.libraryName=r,this.libraryVersion=n,this.applicationTelemetry=i,this.clientId=e,this.logger=o,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=s||new Set;for(const e of Ir)this.intFields.add(e)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){const o=this.preQueueTimeByCorrelationId.get(t);if(o){if(o.name===e)return o.time;this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`)}else this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`)}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,o,r){if(!t)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);if(0===o)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${o}`);else if(!o)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);const n={eventName:e,queueTime:r?0:o,manuallyCompleted:r},i=this.queueMeasurements.get(t);if(i)i.push(n),this.queueMeasurements.set(t,i);else{this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`);const e=[n];this.queueMeasurements.set(t,e)}this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){const o=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,o),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,o);const r=this.startPerformanceMeasurement(e,o);r.startMeasurement();const n={eventId:this.generateId(),status:vr,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:o,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};return this.cacheEventByCorrelationId(n),{end:e=>this.endMeasurement({...n,...e},r),discard:()=>this.discardMeasurements(n.correlationId),add:e=>this.addFields(e,n.correlationId),increment:e=>this.incrementFields(e,n.correlationId),measurement:r,event:n}}endMeasurement(e,t){const o=this.eventsByCorrelationId.get(e.correlationId);if(!o)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;const r=e.eventId===o.eventId;let n={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};r?(n=this.getQueueInfo(e.correlationId),this.discardCache(o.correlationId)):o.incompleteSubMeasurements?.delete(e.eventId),t?.endMeasurement();const i=t?.flushMeasurement();if(!i)return this.logger.trace("PerformanceClient: Performance measurement not taken",o.correlationId),null;if(this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${i} ms`,e.correlationId),!r)return o[e.name+"DurationMs"]=Math.floor(i),{...o};let s={...o,...e},a=0;return s.incompleteSubMeasurements?.forEach((t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,s.correlationId),a++})),s.incompleteSubMeasurements=void 0,s={...s,durationMs:Math.round(i),queuedTimeMs:n.totalQueueTime,queuedCount:n.totalQueueCount,queuedManuallyCompletedCount:n.manuallyCompletedCount,status:wr,incompleteSubsCount:a},this.truncateIntegralFields(s),this.emitEvents([s],e.correlationId),s}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");const o=this.eventsByCorrelationId.get(t);o?this.eventsByCorrelationId.set(t,{...o,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");const o=this.eventsByCorrelationId.get(t);if(o)for(const t in e){if(o.hasOwnProperty(t)){if(isNaN(Number(o[t])))return}else o[t]=0;o[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){const t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}))}getQueueInfo(e){const t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let o=0,r=0,n=0;return t?.forEach((e=>{o+=e.queueTime,r++,n+=e.manuallyCompleted?1:0})),{totalQueueTime:o,totalQueueCount:r,manuallyCompletedCount:n}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e)}discardCache(e){this.discardMeasurements(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e)}addPerformanceCallback(e){const t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){const t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach(((o,r)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${r}`,t),o.apply(null,[e])}))}truncateIntegralFields(e){this.intFields.forEach((t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))}))}}
/*! @azure/msal-common v14.1.0 2023-10-05 */class vn{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class wn{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:vr,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new vn}}startPerformanceMeasurement(){return new vn}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const In="invalid_grant",Tn=483,_n=600,kn="msal",An=30,Sn="msal.js.browser",bn="53ee284d-920a-4b59-9d30-a60315b26836",En="ppnbnpeolgkicgegkbkbjmhlideopiji",Rn="MATS",Pn="Handshake",Mn="HandshakeResponse",Nn="GetToken",On="Response",qn={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},Hn="GET",Ln="POST",Un="authority",Bn="request.state",Dn="nonce.id_token",xn="request.origin",Fn="urlHash",Kn="request.params",zn="interaction.status",Gn="ccs.credential",$n="request.correlationId",jn="request.native",Qn="request.redirect.context",Yn="msal.account.keys",Wn="msal.token.keys",Vn="wrapper.sku",Jn="wrapper.version",Xn={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var Zn;e.InteractionType=void 0,(Zn=e.InteractionType||(e.InteractionType={})).Redirect="redirect",Zn.Popup="popup",Zn.Silent="silent",Zn.None="none";const ei={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},ti={scopes:s},oi="msal.db",ri=`${oi}.keys`,ni={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5};class ii{navigateInternal(e,t){return ii.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ii.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((e=>{setTimeout((()=>{e(!0)}),t.timeout)}))}}const si="pkce_not_created",ai="crypto_nonexistent",ci="empty_navigate_uri",li="hash_empty_error",hi="no_state_in_hash",di="hash_does_not_contain_known_properties",ui="unable_to_parse_state",gi="state_interaction_type_mismatch",pi="interaction_in_progress",mi="popup_window_error",fi="empty_window_error",yi="user_cancelled",Ci="monitor_popup_timeout",vi="monitor_window_timeout",wi="redirect_in_iframe",Ii="block_iframe_reload",Ti="block_nested_popups",_i="iframe_closed_prematurely",ki="silent_logout_unsupported",Ai="no_account_error",Si="silent_prompt_value_error",bi="no_token_request_cache_error",Ei="unable_to_parse_token_request_cache_error",Ri="no_cached_authority_error",Pi="auth_request_not_set_error",Mi="invalid_cache_type",Ni="non_browser_environment",Oi="database_not_open",qi="no_network_connectivity",Hi="post_request_failed",Li="get_request_failed",Ui="failed_to_parse_response",Bi="unable_to_load_token",Di="crypto_key_not_found",xi="auth_code_required",Fi="auth_code_or_nativeAccountId_required",Ki="spa_code_and_nativeAccountId_present",zi="database_unavailable",Gi="unable_to_acquire_token_from_native_platform",$i="native_handshake_timeout",ji="native_extension_not_installed",Qi="native_connection_not_established",Yi="uninitialized_public_client_application",Wi="native_prompt_not_supported",Vi="invalid_base64_string";var Ji=Object.freeze({__proto__:null,authCodeOrNativeAccountIdRequired:Fi,authCodeRequired:xi,authRequestNotSetError:Pi,blockIframeReload:Ii,blockNestedPopups:Ti,cryptoKeyNotFound:Di,cryptoNonExistent:ai,databaseNotOpen:Oi,databaseUnavailable:zi,emptyNavigateUri:ci,emptyWindowError:fi,failedToParseResponse:Ui,getRequestFailed:Li,hashDoesNotContainKnownProperties:di,hashEmptyError:li,iframeClosedPrematurely:_i,interactionInProgress:pi,invalidBase64String:Vi,invalidCacheType:Mi,monitorPopupTimeout:Ci,monitorWindowTimeout:vi,nativeConnectionNotEstablished:Qi,nativeExtensionNotInstalled:ji,nativeHandshakeTimeout:$i,nativePromptNotSupported:Wi,noAccountError:Ai,noCachedAuthorityError:Ri,noNetworkConnectivity:qi,noStateInHash:hi,noTokenRequestCacheError:bi,nonBrowserEnvironment:Ni,pkceNotCreated:si,popupWindowError:mi,postRequestFailed:Hi,redirectInIframe:wi,silentLogoutUnsupported:ki,silentPromptValueError:Si,spaCodeAndNativeAccountIdPresent:Ki,stateInteractionTypeMismatch:gi,unableToAcquireTokenFromNativePlatform:Gi,unableToLoadToken:Bi,unableToParseState:ui,unableToParseTokenRequestCacheError:Ei,uninitializedPublicClientApplication:Yi,userCancelled:yi});const Xi="For more visit: aka.ms/msaljs/browser-errors",Zi={[si]:"The PKCE code challenge and verifier could not be generated.",[ai]:"The crypto object or function is not available.",[ci]:"Navigation URI is empty. Please check stack trace for more info.",[li]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${Xi}`,[hi]:"Hash does not contain state. Please verify that the request originated from msal.",[di]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${Xi}`,[ui]:"Unable to parse state. Please verify that the request originated from msal.",[gi]:"Hash contains state but the interaction type does not match the caller.",[pi]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${Xi}`,[mi]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[fi]:"window.open returned null or undefined window object.",[yi]:"User cancelled the flow.",[Ci]:`Token acquisition in popup failed due to timeout.  ${Xi}`,[vi]:`Token acquisition in iframe failed due to timeout.  ${Xi}`,[wi]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Ii]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${Xi}`,[Ti]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[_i]:"The iframe being monitored was closed prematurely.",[ki]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Ai]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Si]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[bi]:"No token request found in cache.",[Ei]:"The cached token request could not be parsed.",[Ri]:"No cached authority found.",[Pi]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Mi]:"Invalid cache type",[Ni]:"Login and token requests are not supported in non-browser environments.",[Oi]:"Database is not open!",[qi]:"No network connectivity. Check your internet connection.",[Hi]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Li]:"Network request failed. Please check the network trace to determine root cause.",[Ui]:"Failed to parse network response. Check network trace.",[Bi]:"Error loading token to cache.",[Di]:"Cryptographic Key or Keypair not found in browser storage.",[xi]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Fi]:"An authorization code or nativeAccountId must be provided to this flow.",[Ki]:"Request cannot contain both spa code and native account id.",[zi]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Gi]:`Unable to acquire token from native platform.  ${Xi}`,[$i]:"Timed out while attempting to establish connection to browser extension",[ji]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Qi]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${Xi}`,[Yi]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${Xi}`,[Wi]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Vi]:"Invalid base64 encoded string."},es={pkceNotGenerated:{code:si,desc:Zi[si]},cryptoDoesNotExist:{code:ai,desc:Zi[ai]},emptyNavigateUriError:{code:ci,desc:Zi[ci]},hashEmptyError:{code:li,desc:Zi[li]},hashDoesNotContainStateError:{code:hi,desc:Zi[hi]},hashDoesNotContainKnownPropertiesError:{code:di,desc:Zi[di]},unableToParseStateError:{code:ui,desc:Zi[ui]},stateInteractionTypeMismatchError:{code:gi,desc:Zi[gi]},interactionInProgress:{code:pi,desc:Zi[pi]},popupWindowError:{code:mi,desc:Zi[mi]},emptyWindowError:{code:fi,desc:Zi[fi]},userCancelledError:{code:yi,desc:Zi[yi]},monitorPopupTimeoutError:{code:Ci,desc:Zi[Ci]},monitorIframeTimeoutError:{code:vi,desc:Zi[vi]},redirectInIframeError:{code:wi,desc:Zi[wi]},blockTokenRequestsInHiddenIframeError:{code:Ii,desc:Zi[Ii]},blockAcquireTokenInPopupsError:{code:Ti,desc:Zi[Ti]},iframeClosedPrematurelyError:{code:_i,desc:Zi[_i]},silentLogoutUnsupportedError:{code:ki,desc:Zi[ki]},noAccountError:{code:Ai,desc:Zi[Ai]},silentPromptValueError:{code:Si,desc:Zi[Si]},noTokenRequestCacheError:{code:bi,desc:Zi[bi]},unableToParseTokenRequestCacheError:{code:Ei,desc:Zi[Ei]},noCachedAuthorityError:{code:Ri,desc:Zi[Ri]},authRequestNotSet:{code:Pi,desc:Zi[Pi]},invalidCacheType:{code:Mi,desc:Zi[Mi]},notInBrowserEnvironment:{code:Ni,desc:Zi[Ni]},databaseNotOpen:{code:Oi,desc:Zi[Oi]},noNetworkConnectivity:{code:qi,desc:Zi[qi]},postRequestFailed:{code:Hi,desc:Zi[Hi]},getRequestFailed:{code:Li,desc:Zi[Li]},failedToParseNetworkResponse:{code:Ui,desc:Zi[Ui]},unableToLoadTokenError:{code:Bi,desc:Zi[Bi]},signingKeyNotFoundInStorage:{code:Di,desc:Zi[Di]},authCodeRequired:{code:xi,desc:Zi[xi]},authCodeOrNativeAccountRequired:{code:Fi,desc:Zi[Fi]},spaCodeAndNativeAccountPresent:{code:Ki,desc:Zi[Ki]},databaseUnavailable:{code:zi,desc:Zi[zi]},unableToAcquireTokenFromNativePlatform:{code:Gi,desc:Zi[Gi]},nativeHandshakeTimeout:{code:$i,desc:Zi[$i]},nativeExtensionNotInstalled:{code:ji,desc:Zi[ji]},nativeConnectionNotEstablished:{code:Qi,desc:Zi[Qi]},uninitializedPublicClientApplication:{code:Yi,desc:Zi[Yi]},nativePromptNotSupported:{code:Wi,desc:Zi[Wi]},invalidBase64StringError:{code:Vi,desc:Zi[Vi]}};class ts extends ut{constructor(e){super(e,Zi[e]),Object.setPrototypeOf(this,ts.prototype),this.name="BrowserAuthError"}}function os(e){return new ts(e)}class rs{async sendGetRequestAsync(e,t){let o;try{o=await fetch(e,{method:Hn,headers:this.getFetchHeaders(t)})}catch(e){throw window.navigator.onLine?os(Li):os(qi)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch(e){throw os(Ui)}}async sendPostRequestAsync(e,o){const r=o&&o.body||t.EMPTY_STRING;let n;try{n=await fetch(e,{method:Ln,headers:this.getFetchHeaders(o),body:r})}catch(e){throw window.navigator.onLine?os(Hi):os(qi)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch(e){throw os(Ui)}}getFetchHeaders(e){const t=new Headers;if(!e||!e.headers)return t;const o=e.headers;return Object.keys(o).forEach((e=>{t.append(e,o[e])})),t}getHeaderDict(e){const t={};return e.forEach(((e,o)=>{t[o]=e})),t}}const ns=6e3;const is="@azure/msal-browser",ss="3.2.0";class as{constructor(o){this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:o,cache:r,system:n,telemetry:i},s){const a={clientId:t.EMPTY_STRING,authority:`${t.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:t.EMPTY_STRING,authorityMetadata:t.EMPTY_STRING,redirectUri:t.EMPTY_STRING,postLogoutRedirectUri:t.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:Vo.AAD,OIDCOptions:{serverResponseType:fe.FRAGMENT,defaultScopes:[t.OPENID_SCOPE,t.PROFILE_SCOPE,t.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:po.None,tenant:t.EMPTY_STRING},skipAuthorityMetadataCache:!1},c={cacheLocation:qn.SessionStorage,temporaryCacheLocation:qn.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!r||r.cacheLocation!==qn.LocalStorage),claimsBasedCachingEnabled:!1},l={loggerCallback:()=>{},logLevel:e.LogLevel.Info,piiLoggingEnabled:!1},h={...{...or,loggerOptions:l,networkClient:s?new rs:hn,navigationClient:new ii,loadFrameTimeout:0,windowHashTimeout:n?.loadFrameTimeout||6e4,iframeHashTimeout:n?.loadFrameTimeout||ns,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:n?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:An},...n,loggerOptions:n?.loggerOptions||l},d={application:{appName:t.EMPTY_STRING,appVersion:t.EMPTY_STRING},client:new wn};o?.protocolMode!==Vo.OIDC&&o?.OIDCOptions&&new ho(h.loggerOptions).warning(JSON.stringify(Fo(qo)));if(o?.protocolMode&&o.protocolMode!==Vo.AAD&&h?.allowNativeBroker)throw Fo(Ho);return{auth:{...a,...o,OIDCOptions:{...a.OIDCOptions,...o?.OIDCOptions}},cache:{...c,...r},system:h,telemetry:{...d,...i}}}(o,this.browserEnvironment),this.logger=new ho(this.config.system.loggerOptions,is,ss),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}class cs extends as{getModuleName(){return cs.MODULE_NAME}getId(){return cs.ID}async initialize(){return!1}}cs.MODULE_NAME="",cs.ID="TeamsAppOperatingContext";class ls extends as{getModuleName(){return ls.MODULE_NAME}getId(){return ls.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}ls.MODULE_NAME="",ls.ID="StandardOperatingContext";class hs{constructor(e){this.config=e;const t={loggerCallback:void 0,piiLoggingEnabled:!1,logLevel:void 0,correlationId:void 0};this.logger=new ho(t,is,ss)}async createController(){const e=new ls(this.config),t=new cs(this.config),o=[e.initialize(),t.initialize()];return Promise.all(o).then((async()=>{if(t.isAvailable()){const t=await Promise.resolve().then((function(){return Ca}));return await t.StandardController.createController(e)}if(e.isAvailable()){const t=await Promise.resolve().then((function(){return Ca}));return await t.StandardController.createController(e)}throw new Error("No controller found.")}))}}function ds(e){return encodeURIComponent(gs(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function us(e){return ps(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function gs(e){return ps((new TextEncoder).encode(e))}function ps(e){const t=Array.from(e,(e=>String.fromCodePoint(e))).join("");return btoa(t)}function ms(e){return(new TextDecoder).decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw os(Vi)}const o=atob(t);return Uint8Array.from(o,(e=>e.codePointAt(0)||0))}(e))}class fs{static stringToUtf8Arr(e){let t,o=0;const r=e.length;for(let n=0;n<r;n++)t=e.charCodeAt(n),o+=t<128?1:t<2048?2:t<65536?3:t<2097152?4:t<67108864?5:6;const n=new Uint8Array(o);for(let r=0,i=0;r<o;i++)t=e.charCodeAt(i),t<128?n[r++]=t:t<2048?(n[r++]=192+(t>>>6),n[r++]=128+(63&t)):t<65536?(n[r++]=224+(t>>>12),n[r++]=128+(t>>>6&63),n[r++]=128+(63&t)):t<2097152?(n[r++]=240+(t>>>18),n[r++]=128+(t>>>12&63),n[r++]=128+(t>>>6&63),n[r++]=128+(63&t)):t<67108864?(n[r++]=248+(t>>>24),n[r++]=128+(t>>>18&63),n[r++]=128+(t>>>12&63),n[r++]=128+(t>>>6&63),n[r++]=128+(63&t)):(n[r++]=252+(t>>>30),n[r++]=128+(t>>>24&63),n[r++]=128+(t>>>18&63),n[r++]=128+(t>>>12&63),n[r++]=128+(t>>>6&63),n[r++]=128+(63&t));return n}static utf8ArrToString(e){let o=t.EMPTY_STRING;for(let t,r=e.length,n=0;n<r;n++)t=e[n],o+=String.fromCharCode(t>251&&t<254&&n+5<r?1073741824*(t-252)+(e[++n]-128<<24)+(e[++n]-128<<18)+(e[++n]-128<<12)+(e[++n]-128<<6)+e[++n]-128:t>247&&t<252&&n+4<r?(t-248<<24)+(e[++n]-128<<18)+(e[++n]-128<<12)+(e[++n]-128<<6)+e[++n]-128:t>239&&t<248&&n+3<r?(t-240<<18)+(e[++n]-128<<12)+(e[++n]-128<<6)+e[++n]-128:t>223&&t<240&&n+2<r?(t-224<<12)+(e[++n]-128<<6)+e[++n]-128:t>191&&t<224&&n+1<r?(t-192<<6)+e[++n]-128:t);return o}static getSortedObjectString(e){return JSON.stringify(e,Object.keys(e).sort())}}const ys="SHA-256",Cs=new Uint8Array([1,0,1]),vs={name:"RSASSA-PKCS1-v1_5",hash:ys,modulusLength:2048,publicExponent:Cs};async function ws(e,t,o){t?.addQueueMeasurement(Cr.Sha256Digest,o);const r=fs.stringToUtf8Arr(e);return window.crypto.subtle.digest(ys,r)}function Is(e){return window.crypto.getRandomValues(e)}function Ts(){return window.crypto.randomUUID()}async function _s(e){return window.crypto.subtle.exportKey("jwk",e)}class ks{constructor(){this.dbName=oi,this.version=1,this.tableName=ri,this.dbOpen=!1}async open(){return new Promise(((e,t)=>{const o=window.indexedDB.open(this.dbName,this.version);o.addEventListener("upgradeneeded",(e=>{e.target.result.createObjectStore(this.tableName)})),o.addEventListener("success",(t=>{const o=t;this.db=o.target.result,this.dbOpen=!0,e()})),o.addEventListener("error",(()=>t(os(zi))))}))}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return await this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise(((t,o)=>{if(!this.db)return o(os(Oi));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);r.addEventListener("success",(e=>{const o=e;this.closeConnection(),t(o.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),o(e)}))}))}async setItem(e,t){return await this.validateDbIsOpen(),new Promise(((o,r)=>{if(!this.db)return r(os(Oi));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);n.addEventListener("success",(()=>{this.closeConnection(),o()})),n.addEventListener("error",(e=>{this.closeConnection(),r(e)}))}))}async removeItem(e){return await this.validateDbIsOpen(),new Promise(((t,o)=>{if(!this.db)return o(os(Oi));const r=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);r.addEventListener("success",(()=>{this.closeConnection(),t()})),r.addEventListener("error",(e=>{this.closeConnection(),o(e)}))}))}async getKeys(){return await this.validateDbIsOpen(),new Promise(((e,t)=>{if(!this.db)return t(os(Oi));const o=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();o.addEventListener("success",(t=>{const o=t;this.closeConnection(),e(o.target.result)})),o.addEventListener("error",(e=>{this.closeConnection(),t(e)}))}))}async containsKey(e){return await this.validateDbIsOpen(),new Promise(((t,o)=>{if(!this.db)return o(os(Oi));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);r.addEventListener("success",(e=>{const o=e;this.closeConnection(),t(1===o.target.result)})),r.addEventListener("error",(e=>{this.closeConnection(),o(e)}))}))}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise(((e,t)=>{const o=window.indexedDB.deleteDatabase(oi);o.addEventListener("success",(()=>e(!0))),o.addEventListener("blocked",(()=>e(!0))),o.addEventListener("error",(()=>t(!1)))}))}}class As{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach(((t,o)=>{e.push(o)})),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class Ss{constructor(e,t){this.inMemoryCache=new As,this.indexedDBCache=new ks,this.logger=e,this.storeName=t}handleDatabaseAccessError(e){if(!(e instanceof ts&&e.errorCode===zi))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`),this.inMemoryCache.clear(),this.logger.verbose(`In-memory keystore ${this.storeName} deleted`)}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}const bs="asymmetricKeys",Es="symmetricKeys";class Rs{constructor(e){this.logger=e,this.asymmetricKeys=new Ss(this.logger,bs),this.symmetricKeys=new Ss(this.logger,Es)}async clear(){this.asymmetricKeys.clearInMemory(),this.symmetricKeys.clearInMemory();try{return await this.asymmetricKeys.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}}class Ps{constructor(e,t){this.logger=e,function(e){if(!("crypto"in window))throw e.error("BrowserCrypto: crypto interface is unavailable"),os(ai);e.verbose("BrowserCrypto: modern crypto interface available")}(e),this.cache=new Rs(this.logger),this.performanceClient=t}createNewGuid(){return Ts()}base64Encode(e){return gs(e)}base64Decode(e){return ms(e)}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(Cr.CryptoOptsGetPublicKeyThumbprint,e.correlationId),o=await async function(e,t){return window.crypto.subtle.generateKey(vs,e,t)}(Ps.EXTRACTABLE,Ps.POP_KEY_USAGES),r=await _s(o.publicKey),n={e:r.e,kty:r.kty,n:r.n},i=fs.getSortedObjectString(n),s=await this.hashString(i),a=await _s(o.privateKey),c=await async function(e,t,o){return window.crypto.subtle.importKey("jwk",e,vs,t,o)}(a,!1,["sign"]);return await this.cache.asymmetricKeys.setItem(s,{privateKey:c,publicKey:o.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),s}async removeTokenBindingKey(e){await this.cache.asymmetricKeys.removeItem(e);return!await this.cache.asymmetricKeys.containsKey(e)}async clearKeystore(){return await this.cache.clear()}async signJwt(e,t,o){const r=this.performanceClient?.startMeasurement(Cr.CryptoOptsSignJwt,o),n=await this.cache.asymmetricKeys.getItem(t);if(!n)throw os(Di);const i=await _s(n.publicKey),s=fs.getSortedObjectString(i),a=ds(JSON.stringify({kid:t})),c=ds(fn.getShrHeaderString({kid:a,alg:i.alg}));e.cnf={jwk:JSON.parse(s)};const l=`${c}.${ds(JSON.stringify(e))}`,h=fs.stringToUtf8Arr(l),d=await async function(e,t){return window.crypto.subtle.sign(vs,e,t)}(n.privateKey,h),u=`${l}.${us(new Uint8Array(d))}`;return r&&r.end({success:!0}),u}async hashString(e){const t=await ws(e);return us(new Uint8Array(t))}}Ps.POP_KEY_USAGES=["sign","verify"],Ps.EXTRACTABLE=!0;const Ms="storage_not_supported",Ns="stubbed_public_client_application_called",Os="in_mem_redirect_unavailable";var qs=Object.freeze({__proto__:null,inMemRedirectUnavailable:Os,storageNotSupported:Ms,stubbedPublicClientApplicationCalled:Ns});const Hs={[Ms]:"Given storage configuration option was not supported.",[Ns]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Os]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."},Ls={storageNotSupportedError:{code:Ms,desc:Hs[Ms]},stubPcaInstanceCalled:{code:Ns,desc:Hs[Ns]},inMemRedirectUnavailable:{code:Os,desc:Hs[Os]}};class Us extends ut{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Us.prototype)}}function Bs(e){return new Us(e,Hs[e])}class Ds{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==qn.LocalStorage&&e!==qn.SessionStorage||!window[e])throw Bs(Ms)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}class xs{static extractBrowserRequestState(e,t){if(!t)return null;try{return Kr.parseRequestState(e,t).libraryState.meta}catch(e){throw ao(Tt)}}static parseServerResponseFromHash(e){if(!e)return{};const t=new zr(e);return zr.getDeserializedHash(t.getHash())}}class Fs extends er{constructor(e,t,o,r){super(e,o,r),this.COOKIE_LIFE_MULTIPLIER=864e5,this.cacheConfig=t,this.logger=r,this.internalStorage=new As,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps())}setupBrowserStorage(e){switch(e){case qn.LocalStorage:case qn.SessionStorage:try{return new Ds(e)}catch(e){this.logger.verbose(e);break}}return this.cacheConfig.cacheLocation=qn.MemoryStorage,new As}setupTemporaryCacheStorage(e,t){switch(t){case qn.LocalStorage:case qn.SessionStorage:try{return new Ds(e||qn.SessionStorage)}catch(e){return this.logger.verbose(e),this.internalStorage}default:return this.internalStorage}}migrateCacheEntries(){const e=`${t.CACHE_PREFIX}.${m}`,o=`${t.CACHE_PREFIX}.${f}`,r=`${t.CACHE_PREFIX}.${C}`,n=`${t.CACHE_PREFIX}.${v}`,i=[this.browserStorage.getItem(e),this.browserStorage.getItem(o),this.browserStorage.getItem(r),this.browserStorage.getItem(n)];[m,f,C,v].forEach(((e,t)=>this.migrateCacheEntry(e,i[t])))}migrateCacheEntry(e,t){t&&this.setTemporaryCache(e,t,!0)}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(Yn),t=this.getItem(`${Wn}.${this.clientId}`);if(e&&t)return void this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");this.browserStorage.getKeys().forEach((e=>{if(this.isCredentialKey(e)){const t=this.getItem(e);if(t){const o=this.validateAndParseJson(t);if(o&&o.hasOwnProperty("credentialType"))switch(o.credentialType){case Ae.ID_TOKEN:if(kr.isIdTokenEntity(o)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);const t=er.toObject(new kr,o),r=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(r,Ae.ID_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case Ae.ACCESS_TOKEN:case Ae.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Sr.isAccessTokenEntity(o)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);const t=er.toObject(new Sr,o),r=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(r,Ae.ACCESS_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case Ae.REFRESH_TOKEN:if(br.isRefreshTokenEntity(o)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);const t=er.toObject(new br,o),r=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(r,Ae.REFRESH_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){const t=this.getItem(e);if(t){const o=this.validateAndParseJson(t);o&&Jo.isAccountEntity(o)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}}))}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e){this.logger.trace("BrowserCacheManager.getAccount called");const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const o=this.validateAndParseJson(t);return o&&Jo.isAccountEntity(o)?er.toObject(new Jo,o):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(Yn);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(Yn,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),o=t.indexOf(e);o>-1?(t.splice(o,1),this.setItem(Yn,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,Ae.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,Ae.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,Ae.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${Wn}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const o=this.getTokenKeys();switch(t){case Ae.ID_TOKEN:-1===o.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),o.idToken.push(e));break;case Ae.ACCESS_TOKEN:-1===o.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),o.accessToken.push(e));break;case Ae.REFRESH_TOKEN:-1===o.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),o.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),ao(zt)}this.setItem(`${Wn}.${this.clientId}`,JSON.stringify(o))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const o=this.getTokenKeys();switch(t){case Ae.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const r=o.idToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),o.idToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case Ae.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const n=o.accessToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),o.accessToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case Ae.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=o.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),o.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),ao(zt)}this.setItem(`${Wn}.${this.clientId}`,JSON.stringify(o))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.ID_TOKEN),null;const o=this.validateAndParseJson(t);return o&&kr.isIdTokenEntity(o)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),er.toObject(new kr,o)):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=e.generateCredentialKey();this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,Ae.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.ACCESS_TOKEN),null;const o=this.validateAndParseJson(t);return o&&Sr.isAccessTokenEntity(o)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),er.toObject(new Sr,o)):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=e.generateCredentialKey();this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,Ae.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.REFRESH_TOKEN),null;const o=this.validateAndParseJson(t);return o&&br.isRefreshTokenEntity(o)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),er.toObject(new br,o)):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,Ae.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=e.generateCredentialKey();this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,Ae.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const o=this.validateAndParseJson(t);return o&&Yr.isAppMetadataEntity(e,o)?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),er.toObject(new Yr,o)):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=e.generateAppMetadataKey();this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const o=this.validateAndParseJson(t);return o&&cn.isServerTelemetryEntity(e,o)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),er.toObject(new cn,o)):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const o=this.validateAndParseJson(t);return o&&rn.isAuthorityMetadataEntity(e,o)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),er.toObject(new rn,o)):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter((e=>this.isAuthorityMetadata(e)))}setWrapperMetadata(e,t){this.internalStorage.setItem(Vn,e),this.internalStorage.setItem(Jn,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Vn)||t.EMPTY_STRING,this.internalStorage.getItem(Jn)||t.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(I),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const e=this.generateCacheKey(w),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const o=this.getAccountInfoByFilter({localAccountId:t})[0]||null;return o?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(o),o):null}const o=this.validateAndParseJson(t);return o?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoByFilter({homeAccountId:o.homeAccountId,localAccountId:o.localAccountId})[0]||null):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(I),o=this.generateCacheKey(w);if(e){this.logger.verbose("setActiveAccount: Active account set");const r={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId};this.browserStorage.setItem(t,JSON.stringify(r)),this.browserStorage.setItem(o,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(o)}getAccountInfoByFilter(e){const t=this.getAllAccounts();return this.logger.trace(`BrowserCacheManager.getAccountInfoByFilter: total ${t.length} accounts found`),t.filter((t=>(!e.username||e.username.toLowerCase()===t.username.toLowerCase())&&((!e.homeAccountId||e.homeAccountId===t.homeAccountId)&&((!e.localAccountId||e.localAccountId===t.localAccountId)&&((!e.tenantId||e.tenantId===t.tenantId)&&(!e.environment||e.environment===t.environment))))))}getAccountInfoByHints(e,t){const o=this.getAllAccounts().filter((o=>{if(t){const e=o.idTokenClaims&&o.idTokenClaims.sid;return t===e}return!!e&&e===o.username}));if(1===o.length)return o[0];if(o.length>1)throw ao(Rt);return null}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const o=this.validateAndParseJson(t);return o&&ln.isThrottlingEntity(e,o)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),er.toObject(new ln,o)):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const o=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.getItemCookie(o);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const r=this.temporaryCacheStorage.getItem(o);if(!r){if(this.cacheConfig.cacheLocation===qn.LocalStorage){const e=this.browserStorage.getItem(o);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),r}setTemporaryCache(e,t,o){const r=o?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(r,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(r,t))}removeItem(e){this.browserStorage.removeItem(e),this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}containsKey(e){return this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e)}getKeys(){return[...this.browserStorage.getKeys(),...this.temporaryCacheStorage.getKeys()]}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.getKeys().forEach((e=>{!this.browserStorage.containsKey(e)&&!this.temporaryCacheStorage.containsKey(e)||-1===e.indexOf(t.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.removeItem(e)})),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e){e.addQueueMeasurement(Cr.ClearTokensAndKeysWithClaims);const t=this.getTokenKeys(),o=[];t.accessToken.forEach((e=>{const t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&o.push(this.removeAccessToken(e))})),await Promise.all(o),o.length>0&&this.logger.warning(`${o.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,o){let r=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(o){r+=`expires=${this.getCookieExpirationTime(o)};`}this.cacheConfig.secureCookies&&(r+="Secure;"),document.cookie=r}getItemCookie(e){const o=`${encodeURIComponent(e)}=`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){let t=r[e];for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(o))return decodeURIComponent(t.substring(o.length,t.length))}return t.EMPTY_STRING}clearMsalCookies(){const e=`${t.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach((t=>{for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(e)){const e=t.split("=")[0];this.clearItemCookie(e)}}))}clearItemCookie(e){this.setItemCookie(e,t.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}getCache(){return this.browserStorage}setCache(){}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Ko.startsWith(e,t.CACHE_PREFIX)||Ko.startsWith(e,y)?e:`${t.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=Kr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${Un}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=Kr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${Dn}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=Kr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${Bn}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),o=this.getTemporaryCache(t);if(!o)return null;const r=this.generateAuthorityKey(o);return this.getTemporaryCache(r)}updateCacheEntries(e,t,o,r,n){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const a=this.generateAuthorityKey(e);if(this.setTemporaryCache(a,o,!1),n){const e={credential:n.homeAccountId,type:pr};this.setTemporaryCache(Gn,JSON.stringify(e),!0)}else if(r){const e={credential:r,type:mr};this.setTemporaryCache(Gn,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.getKeys().forEach((t=>{-1!==t.indexOf(e)&&this.removeItem(t)})),this.removeItem(this.generateStateKey(e)),this.removeItem(this.generateNonceKey(e)),this.removeItem(this.generateAuthorityKey(e))),this.removeItem(this.generateCacheKey(Kn)),this.removeItem(this.generateCacheKey(xn)),this.removeItem(this.generateCacheKey(Fn)),this.removeItem(this.generateCacheKey($n)),this.removeItem(this.generateCacheKey(Gn)),this.removeItem(this.generateCacheKey(jn)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const o=this.generateStateKey(e),r=this.temporaryCacheStorage.getItem(o);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r||t.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.getKeys().forEach((t=>{if(-1===t.indexOf(Bn))return;const o=this.temporaryCacheStorage.getItem(t);if(!o)return;const r=xs.extractBrowserRequestState(this.cryptoImpl,o);r&&r.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${o}`),this.resetRequestCache(o))})),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=gs(JSON.stringify(e));this.setTemporaryCache(Kn,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(Kn,!0);if(!t)throw os(bi);let o;try{o=JSON.parse(ms(t))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),os(Ei)}if(this.removeItem(this.generateCacheKey(Kn)),!o.authority){const t=this.generateAuthorityKey(e),r=this.getTemporaryCache(t);if(!r)throw os(Ri);o.authority=r}return o}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(jn,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${t.CACHE_PREFIX}.${zn}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const o=`${t.CACHE_PREFIX}.${zn}`;if(e){if(this.getInteractionInProgress())throw os(pi);this.setTemporaryCache(o,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeItem(o)}getLegacyLoginHint(){const e=this.getTemporaryCache(y);e&&(this.browserStorage.removeItem(y),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(m,!0);t&&(this.removeItem(this.generateCacheKey(m)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const o=t||e;if(o){const e=Xo(o,ms);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const o=t.generateCredentialKey();if(e!==o){const r=this.getItem(e);if(r)return this.removeItem(e),this.setItem(o,r),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),o;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}getRedirectRequestContext(){return this.getTemporaryCache(Qn,!0)}setRedirectRequestContext(e){this.setTemporaryCache(Qn,e,!0)}async hydrateCache(e,t){const o=kr.createIdTokenEntity(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let r;t.claims&&(r=await this.cryptoImpl.hashString(t.claims));const n=Sr.createAccessTokenEntity(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?.getTime()||0,e.extExpiresOn?.getTime()||0,this.cryptoImpl,void 0,e.tokenType,void 0,t.sshKid,t.claims,r),i=new Fr(void 0,o,n);return this.saveCacheRecord(i)}}class Ks{static clearHash(e){e.location.hash=t.EMPTY_STRING,"function"==typeof e.history.replaceState&&e.history.replaceState(null,t.EMPTY_STRING,`${e.location.origin}${e.location.pathname}${e.location.search}`)}static replaceHash(e){const o=e.split("#");o.shift(),window.location.hash=o.length>0?o.join("#"):t.EMPTY_STRING}static isInIframe(){return window.parent!==window}static isInPopup(){return"undefined"!=typeof window&&!!window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${kn}.`)}static getCurrentUri(){return window.location.href.split("?")[0].split("#")[0]}static getHomepage(){const e=new zr(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}static blockReloadInHiddenIframes(){if(zr.hashContainsKnownProperties(window.location.hash)&&Ks.isInIframe())throw os(Ii)}static blockRedirectInIframe(t,o){const r=Ks.isInIframe();if(t===e.InteractionType.Redirect&&r&&!o)throw os(wi)}static blockAcquireTokenInPopups(){if(Ks.isInPopup())throw os(Ti)}static blockNonBrowserEnvironment(e){if(!e)throw os(Ni)}static blockAPICallsBeforeInitialize(e){if(!e)throw os(Yi)}}const zs={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};class Gs{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if("undefined"!=typeof window){const t=Ts();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,o,r){if("undefined"!=typeof window){const n={eventType:e,interactionType:t||null,payload:o||null,error:r||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach(((t,o)=>{this.logger.verbose(`Emitting event to callback ${o}: ${e}`),t.apply(null,[n])}))}}handleAccountCacheChange(e){try{const t=e.newValue||e.oldValue;if(!t)return;const o=JSON.parse(t);if("object"!=typeof o||!Jo.isAccountEntity(o))return;const r=er.toObject(new Jo,o).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(zs.ACCOUNT_ADDED,void 0,r)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(zs.ACCOUNT_REMOVED,void 0,r))}catch(e){return}}}class $s{constructor(e,t,o,r,n,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=o,this.networkClient=this.config.system.networkClient,this.eventHandler=n,this.navigationClient=i,this.nativeMessageHandler=a,this.correlationId=c||Ts(),this.logger=r.clone(Sn,ss,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){Jo.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(Jo.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}async initializeBaseRequest(e,t){this.performanceClient.addQueueMeasurement(Cr.InitializeBaseRequest,e.correlationId);const o=e.authority||this.config.auth.authority;t&&await this.validateRequestAuthority(o,t);const r=[...e&&e.scopes||[]],n={...e,correlationId:this.correlationId,authority:o,scopes:r};if(n.authenticationScheme){if(n.authenticationScheme===Be.SSH){if(!e.sshJwk)throw Fo(Po);if(!e.sshKid)throw Fo(Mo)}this.logger.verbose(`Authentication Scheme set to "${n.authenticationScheme}" as configured in Auth request`)}else n.authenticationScheme=Be.BEARER,this.logger.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return this.config.cache.claimsBasedCachingEnabled&&e.claims&&!Ko.isEmptyObj(e.claims)&&(n.requestedClaimsHash=await this.browserCrypto.hashString(e.claims)),n}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||Ks.getCurrentUri();return zr.getAbsoluteUrl(t,Ks.getCurrentUri())}async validateRequestAuthority(e,t){if(!(await this.getDiscoveredAuthority(e)).isAlias(t.environment))throw Fo(Lo)}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const o={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new yn(o,this.browserStorage)}async getDiscoveredAuthority(e){this.logger.verbose("getDiscoveredAuthority called");const t={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata};return e?(this.logger.verbose("Creating discovered authority with request authority"),await an.createDiscoveredInstance(e,this.config.system.networkClient,this.browserStorage,t,this.logger)):(this.logger.verbose("Creating discovered authority with configured authority"),await an.createDiscoveredInstance(this.config.auth.authority,this.config.system.networkClient,this.browserStorage,t,this.logger))}}const js=32;async function Qs(e,t,o){e.addQueueMeasurement(Cr.GeneratePkceCodes,o);const r=Gr(Ys,Cr.GenerateCodeVerifier,t,e,o)(e,t,o);return{verifier:r,challenge:await $r(Ws,Cr.GenerateCodeChallengeFromVerifier,t,e,o)(r,e,t,o)}}function Ys(e,t,o){try{const r=new Uint8Array(js);Gr(Is,Cr.GetRandomValues,t,e,o)(r);return us(r)}catch(e){throw os(si)}}async function Ws(e,t,o,r){t.addQueueMeasurement(Cr.GenerateCodeChallengeFromVerifier,r);try{const n=await $r(ws,Cr.Sha256Digest,o,t,r)(e,t,r);return us(new Uint8Array(n))}catch(e){throw os(si)}}class Vs extends $s{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(Cr.StandardInteractionClientInitializeAuthorizationCodeRequest,e.correlationId);const o=await $r(Qs,Cr.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),r={...e,redirectUri:e.redirectUri,code:t.EMPTY_STRING,codeVerifier:o.verifier};return e.codeChallenge=o.challenge,e.codeChallengeMethod=t.S256_CODE_CHALLENGE_METHOD,r}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||Ts(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const o=this.getLogoutHintFromIdTokenClaims(e.account);o&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=o)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=zr.getAbsoluteUrl(e.postLogoutRedirectUri,Ks.getCurrentUri())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=zr.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,Ks.getCurrentUri())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=zr.getAbsoluteUrl(Ks.getCurrentUri(),Ks.getCurrentUri())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e,t,o){this.performanceClient.addQueueMeasurement(Cr.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const r=await $r(this.getClientConfiguration.bind(this),Cr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,o);return new Jr(r,this.performanceClient)}async getClientConfiguration(e,o,r){this.performanceClient.addQueueMeasurement(Cr.StandardInteractionClientGetClientConfiguration,this.correlationId);const n=await $r(this.getDiscoveredAuthority.bind(this),Cr.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)(o,r),i=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:n,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:i.loggerCallback,piiLoggingEnabled:i.piiLoggingEnabled,logLevel:i.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:e,libraryInfo:{sku:Sn,version:ss,cpu:t.EMPTY_STRING,os:t.EMPTY_STRING},telemetry:this.config.telemetry}}validateAndExtractStateFromHash(e,t,o){if(this.logger.verbose("validateAndExtractStateFromHash called",o),!e.state)throw os(hi);const r=xs.extractBrowserRequestState(this.browserCrypto,e.state);if(!r)throw os(ui);if(r.interactionType!==t)throw os(gi);return this.logger.verbose("Returning state from hash",o),e.state}async getDiscoveredAuthority(e,t){this.performanceClient.addQueueMeasurement(Cr.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const o={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},r=e||this.config.auth.authority,n=sn.generateAuthority(r,t||this.config.auth.azureCloudOptions);return await $r(an.createDiscoveredInstance.bind(an),Cr.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(n,this.config.system.networkClient,this.browserStorage,o,this.logger,this.performanceClient,this.correlationId)}async initializeAuthorizationRequest(e,o){this.performanceClient.addQueueMeasurement(Cr.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const r=this.getRedirectUri(e.redirectUri),n={interactionType:o},i=Kr.setRequestState(this.browserCrypto,e&&e.state||t.EMPTY_STRING,n),s={...await $r(this.initializeBaseRequest.bind(this),Cr.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e),redirectUri:r,state:i,nonce:e.nonce||Ts(),responseMode:this.config.auth.OIDCOptions.serverResponseType},a=e.account||this.browserStorage.getActiveAccount();if(a&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${a.homeAccountId}`,this.correlationId),s.account=a),!s.loginHint&&!a){const e=this.browserStorage.getLegacyLoginHint();e&&(s.loginHint=e)}return s}}const Js="user_switch",Xs={[Js]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Zs extends ut{constructor(e,t,o){super(e,t),Object.setPrototypeOf(this,Zs.prototype),this.name="NativeAuthError",this.ext=o}}function ea(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||(!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode)}function ta(e,t,o){if(o&&o.status)switch(o.status){case"ACCOUNT_UNAVAILABLE":return xr(Rr);case"USER_INTERACTION_REQUIRED":return new Br(e,t);case"USER_CANCEL":return os(yi);case"NO_NETWORK":return os(qi)}return new Zs(e,Xs[e]||t,o)}class oa extends Vs{async acquireToken(e){const t=this.initializeServerTelemetryManager(Xn.acquireTokenSilent_silentFlow),o=await this.createSilentFlowClient(t,e.authority,e.azureCloudOptions);this.logger.verbose("Silent auth client created");try{const t=(await o.acquireCachedToken(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof ts&&e.errorCode===Di&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}async createSilentFlowClient(e,t,o){const r=await $r(this.getClientConfiguration.bind(this),Cr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,o);return new Zr(r,this.performanceClient)}async initializeSilentRequest(e,t){this.performanceClient.addQueueMeasurement(Cr.InitializeSilentRequest,this.correlationId);const o=await $r(this.initializeBaseRequest.bind(this),Cr.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e,t);return{...e,...o,account:t,forceRefresh:e.forceRefresh||!1}}}const ra="brk_client_id",na="brk_redirect_uri";class ia extends $s{constructor(e,t,o,r,n,i,s,a,c,l,h,d){super(e,t,o,r,n,i,a,c,d),this.apiId=s,this.accountId=l,this.nativeMessageHandler=c,this.nativeStorageManager=h,this.silentCacheClient=new oa(e,this.nativeStorageManager,o,r,n,i,a,c,d)}async acquireToken(e){this.performanceClient.addQueueMeasurement(Cr.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(Cr.NativeInteractionClientAcquireToken,e.correlationId),o=Ar.nowSeconds(),r=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,r);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const n={method:Nn,request:r},i=await this.nativeMessageHandler.sendMessage(n),s=this.validateNativeResponse(i);return this.handleNativeResponse(s,r,o).then((e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),e))).catch((e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e}))}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:zo.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),ao(Ft);const o=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:e});if(!o)throw ao(Ft);try{const e=this.createSilentCacheRequest(t,o);return{...await this.silentCacheClient.acquireToken(e),account:o}}catch(e){throw e}}async acquireTokenRedirect(e){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const t=await this.initializeNativeRequest(e),o={method:Nn,request:t};try{const e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e)}catch(e){if(e instanceof Zs&&ea(e))throw e}this.browserStorage.setTemporaryCache(jn,JSON.stringify(t),!0);const r={apiId:Xn.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},n=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);await this.navigationClient.navigateExternal(n,r)}async handleRedirectPromise(){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const e=this.browserStorage.getCachedNativeRequest();if(!e)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),null;const{prompt:t,...o}=e;t&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(jn));const r={method:Nn,request:o},n=Ar.nowSeconds();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.nativeMessageHandler.sendMessage(r);this.validateNativeResponse(e);const t=this.handleNativeResponse(e,o,n);return this.browserStorage.setInteractionInProgress(!1),t}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,o){if(this.logger.trace("NativeInteractionClient - handleNativeResponse called."),e.account.id!==t.accountId)throw ta(Js);const r=await this.getDiscoveredAuthority(t.authority),n=Xo(e.id_token,ms),i=this.createHomeAccountIdentifier(e,n),s=Jo.createAccount({homeAccountId:i,idTokenClaims:n,clientInfo:e.client_info,nativeAccountId:e.account.id},r),a=await this.generateAuthenticationResult(e,t,n,s,r.canonicalAuthority,o);return this.cacheAccount(s),this.cacheNativeTokens(e,t,i,n,a.accessToken,a.tenantId,o),a}createHomeAccountIdentifier(e,o){return Jo.generateHomeAccountId(e.client_info||t.EMPTY_STRING,jo,this.logger,this.browserCrypto,o)}generateScopes(e,t){return e.scope?zo.fromString(e.scope):zo.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===Be.POP){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const o=new Qr(this.browserCrypto),r={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw ao(Xt);return await o.signPopToken(e.access_token,t.keyId,r)}return e.access_token}async generateAuthenticationResult(e,o,r,n,i,s){const a=this.addTelemetryFromNativeResponse(e),c=e.scope?zo.fromString(e.scope):zo.fromString(o.scope),l=e.account.properties||{},h=l.UID||r.oid||r.sub||t.EMPTY_STRING,d=l.TenantId||r.tid||t.EMPTY_STRING,u=await this.generatePopAccessToken(e,o),g=o.tokenType===Be.POP?Be.POP:Be.BEARER;return{authority:i,uniqueId:h,tenantId:d,scopes:c.asArray(),account:n.getAccountInfo(),idToken:e.id_token,idTokenClaims:r,accessToken:u,fromCache:!!a&&this.isResponseFromCache(a),expiresOn:new Date(1e3*Number(s+e.expires_in)),tokenType:g,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch((e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)}))}cacheNativeTokens(e,o,r,n,i,s,a){const c=kr.createIdTokenEntity(r,o.authority,e.id_token||"",o.clientId,n.tid||""),l=a+(o.tokenType===Be.POP?t.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),h=this.generateScopes(e,o),d=Sr.createAccessTokenEntity(r,o.authority,i,o.clientId,n.tid||s,h.printScopes(),l,0,this.browserCrypto),u=new Fr(void 0,c,d);this.nativeStorageManager.saveCacheRecord(u,o.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw gt(at,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.validateRequestAuthority(t,e.account);const o=new zr(t);o.validateAsUri();const{scopes:r,...n}=e,i=new zo(r||[]);i.appendScopes(s);const a={...n,accountId:this.accountId,clientId:this.config.auth.clientId,authority:o.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case Xn.ssoSilent:case Xn.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),de.NONE}if(e.prompt)switch(e.prompt){case de.NONE:case de.CONSENT:case de.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),os(Wi)}else this.logger.trace("initializeNativeRequest: prompt was not provided")})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1};if(this.handleExtraBrokerParams(a),a.extraParameters=a.extraParameters||{},a.extraParameters.telemetry=Rn,e.authenticationScheme===Be.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},o=new Qr(this.browserCrypto),r=await $r(o.generateCnf.bind(o),Cr.PopTokenGenerateCnf,this.logger,this.performanceClient,this.correlationId)(t,this.logger);a.reqCnf=r.reqCnfHash,a.keyId=r.kid}return a}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(ra)&&e.extraParameters.hasOwnProperty(na)&&e.extraParameters.hasOwnProperty(A)){const t=e.extraParameters[A],o=e.redirectUri,r=e.extraParameters[na];e.extraParameters={child_client_id:t,child_redirect_uri:o},e.redirectUri=r}}}class sa{constructor(e,t,o,r){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=r,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=o,this.handshakeEvent=o.startMeasurement(Cr.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:bn,extensionId:this.extensionId,responseId:Ts(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise(((e,o)=>{this.resolvers.set(t.responseId,{resolve:e,reject:o})}))}static async createProvider(e,t,o){e.trace("NativeMessageHandler - createProvider called.");try{const r=new sa(e,t,o,En);return await r.sendHandshakeRequest(),r}catch(r){const n=new sa(e,t,o);return await n.sendHandshakeRequest(),n}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:bn,extensionId:this.extensionId,responseId:Ts(),body:{method:Pn}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise(((t,o)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:o}),this.timeoutId=window.setTimeout((()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),o(os($i)),this.handshakeResolvers.delete(e.responseId)}),this.handshakeTimeoutMs)}))}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===bn&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===Pn){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(os(ji))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,o=this.resolvers.get(t.responseId),r=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if(e===On){if(!o)return;const e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)o.reject(ta(e.code,e.description,e.ext));else{if(!e.result)throw gt(at,"Event does not contain result.");e.result.code&&e.result.description?o.reject(ta(e.result.code,e.result.description,e.result.ext)):o.resolve(e.result)}this.resolvers.delete(t.responseId)}else if(e===Mn){if(!r)return void this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),r.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),o?o.reject(t):r&&r.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,o,r){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!o)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(r)switch(r){case Be.BEARER:case Be.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class aa{constructor(e,t,o,r,n){this.authModule=e,this.browserStorage=t,this.authCodeRequest=o,this.logger=r,this.performanceClient=n}async handleCodeResponseFromHash(e,t,o,r){if(this.performanceClient.addQueueMeasurement(Cr.HandleCodeResponseFromHash,this.authCodeRequest.correlationId),!e)throw os(li);const n=this.browserStorage.generateStateKey(t),i=this.browserStorage.getTemporaryCache(n);if(!i)throw ao(kt,"Cached State");let s;try{s=this.authModule.handleFragmentResponse(e,i)}catch(e){throw e instanceof dr&&e.subError===yi?os(yi):e}return $r(this.handleCodeResponseFromServer.bind(this),Cr.HandleCodeResponseFromServer,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(s,t,o,r)}async handleCodeResponseFromServer(e,t,o,r,n=!0){this.performanceClient.addQueueMeasurement(Cr.HandleCodeResponseFromServer,this.authCodeRequest.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called");const i=this.browserStorage.generateStateKey(t),s=this.browserStorage.getTemporaryCache(i);if(!s)throw ao(kt,"Cached State");const a=this.browserStorage.generateNonceKey(s),c=this.browserStorage.getTemporaryCache(a);if(this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await $r(this.updateTokenEndpointAuthority.bind(this),Cr.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(e.cloud_instance_host_name,o,r),n&&(e.nonce=c||void 0),e.state=s,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const l=await $r(this.authModule.acquireToken.bind(this.authModule),Cr.AuthClientAcquireToken,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(this.authCodeRequest,e);return this.browserStorage.cleanRequestByState(t),l}async updateTokenEndpointAuthority(e,t,o){this.performanceClient.addQueueMeasurement(Cr.UpdateTokenEndpointAuthority,this.authCodeRequest.correlationId);const r=`https://${e}/${t.tenant}/`,n=await an.createDiscoveredInstance(r,o,this.browserStorage,t.options,this.logger,this.performanceClient,this.authCodeRequest.correlationId);this.authModule.updateAuthority(n)}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(Gn,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class ca extends Vs{constructor(e,t,o,r,n,i,s,a,c,l){super(e,t,o,r,n,i,s,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a}acquireToken(e){try{const t=this.generatePopupName(e.scopes||s,e.authority||this.config.auth.authority),o=e.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t,o);{this.logger.verbose("asyncPopup set to false, opening popup before acquiring token");const r=this.openSizedPopup("about:blank",t,o);return this.acquireTokenPopupAsync(e,t,o,r)}}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),o=this.generateLogoutPopupName(t),r=e&&e.authority,n=e&&e.mainWindowRedirectUri,i=e?.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,o,i,r,void 0,n);{this.logger.verbose("asyncPopup set to false, opening popup");const e=this.openSizedPopup("about:blank",o,i);return this.logoutPopupAsync(t,o,i,r,e,n)}}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(o,r,n,i){this.logger.verbose("acquireTokenPopupAsync called");const s=this.initializeServerTelemetryManager(Xn.acquireTokenPopup);this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientInitializeAuthorizationRequest,o.correlationId);const a=await this.initializeAuthorizationRequest(o,e.InteractionType.Popup);this.browserStorage.updateCacheEntries(a.state,a.nonce,a.authority,a.loginHint||t.EMPTY_STRING,a.account||null);try{this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientInitializeAuthorizationCodeRequest,o.correlationId);const t=await this.initializeAuthorizationCodeRequest(a);this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientCreateAuthCodeClient,o.correlationId);const c=await this.createAuthCodeClient(s,a.authority,a.azureCloudOptions);this.logger.verbose("Auth code client created");const l=sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,o.authenticationScheme);let h;l&&(h=this.performanceClient.startMeasurement(Cr.FetchAccountIdWithNativeBroker,o.correlationId));const d=await c.getAuthCodeUrl({...a,nativeBroker:l}),u=new aa(c,this.browserStorage,t,this.logger,this.performanceClient),g={popup:i,popupName:r,popupWindowAttributes:n},p=this.initiateAuthRequest(d,g);this.eventHandler.emitEvent(zs.POPUP_OPENED,e.InteractionType.Popup,{popupWindow:p},null);const m=await this.monitorPopupForHash(p),f=zr.getDeserializedHash(m),y=this.validateAndExtractStateFromHash(f,e.InteractionType.Popup,a.correlationId);if(ur.removeThrottle(this.browserStorage,this.config.auth.clientId,t),f.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),h&&h.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw os(Qi);const e=new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,f.accountId,this.nativeStorage,a.correlationId),{userRequestState:t}=Kr.parseRequestState(this.browserCrypto,y);return e.acquireToken({...a,state:t,prompt:void 0}).finally((()=>{this.browserStorage.cleanRequestByState(y)}))}return await u.handleCodeResponseFromHash(m,y,c.authority,this.networkClient)}catch(e){throw i&&i.close(),e instanceof ut&&(e.setCorrelationId(this.correlationId),s.cacheFailedRequest(e)),this.browserStorage.cleanRequestByState(a.state),e}}async logoutPopupAsync(t,o,r,n,i,s){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(zs.LOGOUT_START,e.InteractionType.Popup,t);const a=this.initializeServerTelemetryManager(Xn.logoutPopup);try{await this.clearCacheOnLogout(t.account),this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientCreateAuthCodeClient,t.correlationId);const c=await this.createAuthCodeClient(a,n);this.logger.verbose("Auth code client created");try{c.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId&&t.postLogoutRedirectUri&&c.authority.protocolMode===Vo.OIDC){if(this.browserStorage.removeAccount(t.account?.homeAccountId),this.eventHandler.emitEvent(zs.LOGOUT_SUCCESS,e.InteractionType.Popup,t),s){const e={apiId:Xn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=zr.getAbsoluteUrl(s,Ks.getCurrentUri());await this.navigationClient.navigateInternal(t,e)}return void(i&&i.close())}}const l=c.getLogoutUri(t);this.eventHandler.emitEvent(zs.LOGOUT_SUCCESS,e.InteractionType.Popup,t);const h=this.openPopup(l,{popupName:o,popupWindowAttributes:r,popup:i});if(this.eventHandler.emitEvent(zs.POPUP_OPENED,e.InteractionType.Popup,{popupWindow:h},null),await this.waitForLogoutPopup(h),s){const e={apiId:Xn.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=zr.getAbsoluteUrl(s,Ks.getCurrentUri());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(t){throw i&&i.close(),t instanceof ut&&(t.setCorrelationId(this.correlationId),a.cacheFailedRequest(t)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(zs.LOGOUT_FAILURE,e.InteractionType.Popup,null,t),this.eventHandler.emitEvent(zs.LOGOUT_END,e.InteractionType.Popup),t}this.eventHandler.emitEvent(zs.LOGOUT_END,e.InteractionType.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),os(ci)}monitorPopupForHash(e){return new Promise(((o,r)=>{const n=this.config.system.windowHashTimeout/this.config.system.pollIntervalMilliseconds;let i=0;this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const s=setInterval((()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),this.cleanPopup(),clearInterval(s),void r(os(yi));let a=t.EMPTY_STRING,c=t.EMPTY_STRING;try{a=e.location.href,c=this.extractServerResponseStringFromPopup(e,a)}catch(e){}a&&"about:blank"!==a&&(this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),i++,c?(this.logger.verbose("PopupHandler.monitorPopupForHash - found hash in url"),clearInterval(s),this.cleanPopup(e),zr.hashContainsKnownProperties(c)?(this.logger.verbose("PopupHandler.monitorPopupForHash - hash contains known properties, returning."),o(c)):(this.logger.error("PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely."),this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${c}`),r(os(di)))):i>n&&(this.logger.error("PopupHandler.monitorPopupForHash - unable to find hash in url, timing out"),clearInterval(s),r(os(Ci))))}),this.config.system.pollIntervalMilliseconds)}))}waitForLogoutPopup(e){return new Promise((o=>{this.logger.verbose("PopupHandler.waitForLogoutPopup - polling started");const r=setInterval((()=>{e.closed&&(this.logger.error("PopupHandler.waitForLogoutPopup - window closed"),this.cleanPopup(),clearInterval(r),o());let n=t.EMPTY_STRING;try{n=e.location.href}catch(e){}n&&"about:blank"!==n&&(this.logger.verbose("PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing."),clearInterval(r),this.cleanPopup(e),o())}),this.config.system.pollIntervalMilliseconds)}))}openPopup(e,t){try{let o;if(t.popup?(o=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),o.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),o=this.openSizedPopup(e,t.popupName,t.popupWindowAttributes)),!o)throw os(fi);return o.focus&&o.focus(),this.currentWindow=o,window.addEventListener("beforeunload",this.unloadWindow),o}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),os(mi)}}openSizedPopup(e,t,o){const r=window.screenLeft?window.screenLeft:window.screenX,n=window.screenTop?window.screenTop:window.screenY,i=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let a=o.popupSize?.width,c=o.popupSize?.height,l=o.popupPosition?.top,h=o.popupPosition?.left;return(!a||a<0||a>i)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),a=Tn),(!c||c<0||c>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),c=_n),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),l=Math.max(0,s/2-_n/2+n)),(!h||h<0||h>i)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),h=Math.max(0,i/2-Tn/2+r)),window.open(e,t,`width=${a}, height=${c}, top=${l}, left=${h}, scrollbars=yes`)}unloadWindow(t){this.browserStorage.cleanRequestByInteractionType(e.InteractionType.Popup),this.currentWindow&&this.currentWindow.close(),t.preventDefault()}cleanPopup(e){e&&e.close(),window.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${kn}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${kn}.${this.config.auth.clientId}.${t}.${this.correlationId}`}extractServerResponseStringFromPopup(e,t){let o;return o=this.config.auth.OIDCOptions?.serverResponseType===fe.QUERY?zr.parseQueryServerResponse(t):e.location.hash,o}}class la extends aa{constructor(e,t,o,r,n,i){super(e,t,o,r,i),this.browserCrypto=n}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(xn,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache($n,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const o={apiId:Xn.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if("function"==typeof t.onRedirectNavigate){this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback");return!1!==t.onRedirectNavigate(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await t.navigationClient.navigateExternal(e,o)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")}return this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await t.navigationClient.navigateExternal(e,o)}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),os(ci)}async handleCodeResponseFromHash(e,t,o,r){if(this.logger.verbose("RedirectHandler.handleCodeResponse called"),!e)throw os(li);this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),i=this.browserStorage.getTemporaryCache(n);if(!i)throw ao(kt,"Cached State");let s;try{s=this.authModule.handleFragmentResponse(e,i)}catch(e){throw e instanceof dr&&e.subError===yi?os(yi):e}const a=this.browserStorage.generateNonceKey(i),c=this.browserStorage.getTemporaryCache(a);if(this.authCodeRequest.code=s.code,s.cloud_instance_host_name&&await this.updateTokenEndpointAuthority(s.cloud_instance_host_name,o,r),s.nonce=c||void 0,s.state=i,s.client_info)this.authCodeRequest.clientInfo=s.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const l=await this.authModule.acquireToken(this.authCodeRequest,s);return this.browserStorage.cleanRequestByState(t),l}}class ha extends Vs{constructor(e,t,o,r,n,i,s,a,c,l){super(e,t,o,r,n,i,s,c,l),this.nativeStorage=a}async acquireToken(o){this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientInitializeAuthorizationRequest,o.correlationId);const r=await this.initializeAuthorizationRequest(o,e.InteractionType.Redirect);this.browserStorage.updateCacheEntries(r.state,r.nonce,r.authority,r.loginHint||t.EMPTY_STRING,r.account||null);const n=this.initializeServerTelemetryManager(Xn.acquireTokenRedirect),i=t=>{t.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(r.state),this.eventHandler.emitEvent(zs.RESTORE_FROM_BFCACHE,e.InteractionType.Redirect))};try{this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientInitializeAuthorizationCodeRequest,o.correlationId);const e=await this.initializeAuthorizationCodeRequest(r);this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientCreateAuthCodeClient,o.correlationId);const t=await this.createAuthCodeClient(n,r.authority,r.azureCloudOptions);this.logger.verbose("Auth code client created");const s=new la(t,this.browserStorage,e,this.logger,this.browserCrypto,this.performanceClient),a=await t.getAuthCodeUrl({...r,nativeBroker:sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,o.authenticationScheme)}),c=this.getRedirectStartPage(o.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",i),await s.initiateAuthRequest(a,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:o.onRedirectNavigate})}catch(e){throw e instanceof ut&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),window.removeEventListener("pageshow",i),this.browserStorage.cleanRequestByState(r.state),e}}async handleRedirectPromise(o){const r=this.initializeServerTelemetryManager(Xn.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.getRedirectResponseHash(o||window.location.hash);if(!n)return this.logger.info("handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(e.InteractionType.Redirect),null;let i;try{const t=zr.getDeserializedHash(n);i=this.validateAndExtractStateFromHash(t,e.InteractionType.Redirect),this.logger.verbose("State extracted from hash")}catch(t){return this.logger.info(`handleRedirectPromise was unable to extract state due to: ${t}`),this.browserStorage.cleanRequestByInteractionType(e.InteractionType.Redirect),null}const s=this.browserStorage.getTemporaryCache(xn,!0)||t.EMPTY_STRING,a=zr.removeHashFromUrl(s);if(a===zr.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl){this.logger.verbose("Current page is loginRequestUrl, handling hash");const e=await this.handleHash(n,i,r);return s.indexOf("#")>-1&&Ks.replaceHash(s),e}if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling hash"),this.handleHash(n,i,r);if(!Ks.isInIframe()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(Fn,n,!0);const e={apiId:Xn.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let t=!0;if(s&&"null"!==s)this.logger.verbose(`Navigating to loginRequestUrl: ${s}`),t=await this.navigationClient.navigateInternal(s,e);else{const o=Ks.getHomepage();this.browserStorage.setTemporaryCache(xn,o,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(o,e)}if(!t)return this.handleHash(n,i,r)}return null}catch(t){throw t instanceof ut&&(t.setCorrelationId(this.correlationId),r.cacheFailedRequest(t)),this.browserStorage.cleanRequestByInteractionType(e.InteractionType.Redirect),t}}getRedirectResponseHash(e){this.logger.verbose("getRedirectResponseHash called");if(zr.hashContainsKnownProperties(e))return Ks.clearHash(window),this.logger.verbose("Hash contains known properties, returning response hash"),e;const t=this.browserStorage.getTemporaryCache(Fn,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Fn)),this.logger.verbose("Hash does not contain known properties, returning cached hash"),t}async handleHash(e,t,o){const r=this.browserStorage.getCachedRequest(t);this.logger.verbose("handleHash called, retrieved cached request");const n=zr.getDeserializedHash(e);if(n.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw os(Qi);const e=new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,n.accountId,this.nativeStorage,r.correlationId),{userRequestState:o}=Kr.parseRequestState(this.browserCrypto,t);return e.acquireToken({...r,state:o,prompt:void 0}).finally((()=>{this.browserStorage.cleanRequestByState(t)}))}const i=this.browserStorage.getCachedAuthority(t);if(!i)throw os(Ri);this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientCreateAuthCodeClient,r.correlationId);const s=await this.createAuthCodeClient(o,i);this.logger.verbose("Auth code client created"),ur.removeThrottle(this.browserStorage,this.config.auth.clientId,r);const a=new la(s,this.browserStorage,r,this.logger,this.browserCrypto,this.performanceClient);return await a.handleCodeResponseFromHash(e,t,s.authority,this.networkClient)}async logout(t){this.logger.verbose("logoutRedirect called");const o=this.initializeLogoutRequest(t),r=this.initializeServerTelemetryManager(Xn.logout);try{this.eventHandler.emitEvent(zs.LOGOUT_START,e.InteractionType.Redirect,t),await this.clearCacheOnLogout(o.account);const n={apiId:Xn.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1};this.performanceClient.setPreQueueTime(Cr.StandardInteractionClientCreateAuthCodeClient,o.correlationId);const i=await this.createAuthCodeClient(r,t&&t.authority);if(this.logger.verbose("Auth code client created"),i.authority.protocolMode===Vo.OIDC)try{i.authority.endSessionEndpoint}catch{if(o.account?.homeAccountId)return this.browserStorage.removeAccount(o.account?.homeAccountId),void this.eventHandler.emitEvent(zs.LOGOUT_SUCCESS,e.InteractionType.Redirect,o)}const s=i.getLogoutUri(o);if(this.eventHandler.emitEvent(zs.LOGOUT_SUCCESS,e.InteractionType.Redirect,o),!t||"function"!=typeof t.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(s,n);if(!1!==t.onRedirectNavigate(s))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(s,n);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(t){throw t instanceof ut&&(t.setCorrelationId(this.correlationId),r.cacheFailedRequest(t)),this.eventHandler.emitEvent(zs.LOGOUT_FAILURE,e.InteractionType.Redirect,null,t),this.eventHandler.emitEvent(zs.LOGOUT_END,e.InteractionType.Redirect),t}this.eventHandler.emitEvent(zs.LOGOUT_END,e.InteractionType.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return zr.getAbsoluteUrl(t,Ks.getCurrentUri())}}class da extends aa{constructor(e,t,o,r,n,i){super(e,t,o,r,i),this.navigateFrameWait=n.navigateFrameWait,this.pollIntervalMilliseconds=n.pollIntervalMilliseconds}async initiateAuthRequest(e){if(this.performanceClient.addQueueMeasurement(Cr.SilentHandlerInitiateAuthRequest,this.authCodeRequest.correlationId),!e)throw this.logger.info("Navigate url is empty"),os(ci);return this.navigateFrameWait?await $r(this.loadFrame.bind(this),Cr.SilentHandlerLoadFrame,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(e):this.loadFrameSync(e)}monitorIframeForHash(e,o){return this.performanceClient.addQueueMeasurement(Cr.SilentHandlerMonitorIframeForHash,this.authCodeRequest.correlationId),new Promise(((r,n)=>{o<ns&&this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${o}ms) than the default (6000ms). This may result in timeouts.`);const i=window.performance.now()+o,s=setInterval((()=>{if(window.performance.now()>i)return this.removeHiddenIframe(e),clearInterval(s),void n(os(vi));let o=t.EMPTY_STRING;const a=e.contentWindow;try{o=a?a.location.href:t.EMPTY_STRING}catch(e){}if(!o||"about:blank"===o)return;const c=a?a.location.hash:t.EMPTY_STRING;return c?zr.hashContainsKnownProperties(c)?(this.removeHiddenIframe(e),clearInterval(s),void r(c)):(this.logger.error("SilentHandler:monitorIFrameForHash - a hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page."),this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${o}`),this.removeHiddenIframe(e),clearInterval(s),void n(os(di))):(this.logger.error("SilentHandler:monitorIFrameForHash - the request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page."),this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${o}`),this.removeHiddenIframe(e),clearInterval(s),void n(os(li)))}),this.pollIntervalMilliseconds)}))}loadFrame(e){return this.performanceClient.addQueueMeasurement(Cr.SilentHandlerLoadFrame,this.authCodeRequest.correlationId),new Promise(((t,o)=>{const r=this.createHiddenIframe();setTimeout((()=>{r?(r.src=e,t(r)):o("Unable to load iframe")}),this.navigateFrameWait)}))}loadFrameSync(e){const t=this.createHiddenIframe();return t.src=e,t}createHiddenIframe(){const e=document.createElement("iframe");return e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.getElementsByTagName("body")[0].appendChild(e),e}removeHiddenIframe(e){document.body===e.parentNode&&document.body.removeChild(e)}}class ua extends Vs{constructor(e,t,o,r,n,i,s,a,c,l,h){super(e,t,o,r,n,i,a,l,h),this.apiId=s,this.nativeStorage=c}async acquireToken(o){if(this.performanceClient.addQueueMeasurement(Cr.SilentIframeClientAcquireToken,o.correlationId),o.loginHint||o.sid||o.account&&o.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request."),o.prompt&&o.prompt!==de.NONE&&o.prompt!==de.NO_SESSION)throw os(Si);const r=await $r(this.initializeAuthorizationRequest.bind(this),Cr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,o.correlationId)({...o,prompt:o.prompt||de.NONE},e.InteractionType.Silent);this.browserStorage.updateCacheEntries(r.state,r.nonce,r.authority,r.loginHint||t.EMPTY_STRING,r.account||null);const n=this.initializeServerTelemetryManager(this.apiId);try{const e=await $r(this.createAuthCodeClient.bind(this),Cr.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,o.correlationId)(n,r.authority,r.azureCloudOptions);return await $r(this.silentTokenHelper.bind(this),Cr.SilentIframeClientTokenHelper,this.logger,this.performanceClient,o.correlationId)(e,r)}catch(e){throw e instanceof ut&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.browserStorage.cleanRequestByState(r.state),e}}logout(){return Promise.reject(os(ki))}async silentTokenHelper(t,o){this.performanceClient.addQueueMeasurement(Cr.SilentIframeClientTokenHelper,o.correlationId);const r=await $r(this.initializeAuthorizationCodeRequest.bind(this),Cr.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,o.correlationId)(o),n=await $r(t.getAuthCodeUrl.bind(t),Cr.GetAuthCodeUrl,this.logger,this.performanceClient,o.correlationId)({...o,nativeBroker:sa.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,o.authenticationScheme)}),i=new da(t,this.browserStorage,r,this.logger,this.config.system,this.performanceClient),s=await $r(i.initiateAuthRequest.bind(i),Cr.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,o.correlationId)(n),a=await $r(i.monitorIframeForHash.bind(i),Cr.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,o.correlationId)(s,this.config.system.iframeHashTimeout),c=zr.getDeserializedHash(a),l=this.validateAndExtractStateFromHash(c,e.InteractionType.Silent,r.correlationId);if(c.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw os(Qi);const e=new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,c.accountId,this.browserStorage,this.correlationId),{userRequestState:t}=Kr.parseRequestState(this.browserCrypto,l);return $r(e.acquireToken.bind(e),Cr.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,o.correlationId)({...o,state:t,prompt:o.prompt||de.NONE}).finally((()=>{this.browserStorage.cleanRequestByState(l)}))}return $r(i.handleCodeResponseFromHash.bind(i),Cr.HandleCodeResponseFromHash,this.logger,this.performanceClient,o.correlationId)(a,l,t.authority,this.networkClient)}}class ga extends Vs{async acquireToken(e){this.performanceClient.addQueueMeasurement(Cr.SilentRefreshClientAcquireToken,e.correlationId);const t=await $r(this.initializeBaseRequest.bind(this),Cr.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,e.account),o={...e,...t},r=this.initializeServerTelemetryManager(Xn.acquireTokenSilent_silentFlow),n=await this.createRefreshTokenClient(r,o.authority,o.azureCloudOptions);return this.logger.verbose("Refresh token client created"),$r(n.acquireTokenByRefreshToken.bind(n),Cr.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(o).then((e=>e)).then((t=>(this.performanceClient.addFields({fromCache:t.fromCache,requestId:t.requestId},e.correlationId),t))).catch((e=>{throw e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e),e}))}logout(){return Promise.reject(os(ki))}async createRefreshTokenClient(e,t,o){const r=await $r(this.getClientConfiguration.bind(this),Cr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,o);return new Xr(r,this.performanceClient)}}class pa{constructor(e,t,o,r){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=o,this.cryptoObj=r}loadExternalTokens(e,t,o){if(this.logger.info("TokenCache - loadExternalTokens called"),!t.id_token)throw os(Bi);const r=Xo(t.id_token,ms);let n,i,s;if(e.account)s=Jo.createFromAccountInfo(e.account),n=new Fr(s,this.loadIdToken(t.id_token,s.homeAccountId,e.account.environment,e.account.tenantId),this.loadAccessToken(e,t,s.homeAccountId,e.account.environment,e.account.tenantId,o),this.loadRefreshToken(e,t,s.homeAccountId,e.account.environment));else{if(!e.authority)throw os(Bi);{const a=sn.generateAuthority(e.authority,e.azureCloudOptions),c={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache};if(i=new sn(a,this.config.system.networkClient,this.storage,c,this.logger),o.clientInfo)this.logger.trace("TokenCache - homeAccountId from options"),s=this.loadAccount(r,i,o.clientInfo),n=new Fr(s,this.loadIdToken(t.id_token,s.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,s.homeAccountId,i.hostnameAndPort,i.tenant,o),this.loadRefreshToken(e,t,s.homeAccountId,i.hostnameAndPort));else{if(!t.client_info)throw os(Bi);this.logger.trace("TokenCache - homeAccountId from response"),s=this.loadAccount(r,i,t.client_info),n=new Fr(s,this.loadIdToken(t.id_token,s.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,s.homeAccountId,i.hostnameAndPort,i.tenant,o),this.loadRefreshToken(e,t,s.homeAccountId,i.hostnameAndPort))}}}return this.generateAuthenticationResult(e,r,n,s,i)}loadAccount(e,t,o,r){let n;if(r?n=r:void 0!==t.authorityType&&o&&(n=Jo.generateHomeAccountId(o,t.authorityType,this.logger,this.cryptoObj,e)),!n)throw os(Bi);const i=Jo.createAccount({homeAccountId:n,idTokenClaims:e,clientInfo:o,environment:t.hostnameAndPort},t);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading account"),this.storage.setAccount(i),i;throw os(Bi)}loadIdToken(e,t,o,r){const n=kr.createIdTokenEntity(t,o,e,this.config.auth.clientId,r);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading id token"),this.storage.setIdTokenCredential(n),n;throw os(Bi)}loadAccessToken(e,t,o,r,n,i){if(!t.access_token)return this.logger.verbose("TokenCache - No access token provided for caching"),null;if(!t.expires_in)throw os(Bi);if(!i.extendedExpiresOn)throw os(Bi);const s=new zo(e.scopes).printScopes(),a=i.expiresOn||t.expires_in+(new Date).getTime()/1e3,c=i.extendedExpiresOn,l=Sr.createAccessTokenEntity(o,r,t.access_token,this.config.auth.clientId,n,s,a,c,this.cryptoObj);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading access token"),this.storage.setAccessTokenCredential(l),l;throw os(Bi)}loadRefreshToken(e,t,o,r){if(!t.refresh_token)return this.logger.verbose("TokenCache - No refresh token provided for caching"),null;const n=br.createRefreshTokenEntity(o,r,t.refresh_token,this.config.auth.clientId);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading refresh token"),this.storage.setRefreshTokenCredential(n),n;throw os(Bi)}generateAuthenticationResult(e,o,r,n,i){let s,a=t.EMPTY_STRING,c=[],l=null;r?.accessToken&&(a=r.accessToken.secret,c=zo.fromString(r.accessToken.target).asArray(),l=new Date(1e3*Number(r.accessToken.expiresOn)),s=new Date(1e3*Number(r.accessToken.extendedExpiresOn)));const h=o.oid||o.sub||t.EMPTY_STRING,d=o.tid||t.EMPTY_STRING;return{authority:i?i.canonicalAuthority:t.EMPTY_STRING,uniqueId:h,tenantId:d,scopes:c,account:n.getAccountInfo(),idToken:r.idToken?.secret||"",idTokenClaims:o||{},accessToken:a,fromCache:!0,expiresOn:l,correlationId:e.correlationId||t.EMPTY_STRING,requestId:t.EMPTY_STRING,extExpiresOn:s,familyId:t.EMPTY_STRING,tokenType:r?.accessToken?.tokenType||t.EMPTY_STRING,state:t.EMPTY_STRING,cloudGraphHostName:n.cloudGraphHostName||t.EMPTY_STRING,msGraphHost:n.msGraphHost||t.EMPTY_STRING,code:void 0,fromNativeBroker:!1}}}class ma extends Jr{constructor(e){super(e),this.includeRedirectUri=!1}}class fa extends Vs{constructor(e,t,o,r,n,i,s,a,c,l){super(e,t,o,r,n,i,a,c,l),this.apiId=s}async acquireToken(o){if(!o.code)throw os(xi);const r=await $r(this.initializeAuthorizationRequest.bind(this),Cr.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,o.correlationId)(o,e.InteractionType.Silent);this.browserStorage.updateCacheEntries(r.state,r.nonce,r.authority,r.loginHint||t.EMPTY_STRING,r.account||null);const n=this.initializeServerTelemetryManager(this.apiId);try{const e={...r,code:o.code},t=await $r(this.getClientConfiguration.bind(this),Cr.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,o.correlationId)(n,r.authority),i=new ma(t);this.logger.verbose("Auth code client created");const s=new da(i,this.browserStorage,e,this.logger,this.config.system,this.performanceClient);return $r(s.handleCodeResponseFromServer.bind(s),Cr.HandleCodeResponseFromServer,this.logger,this.performanceClient,o.correlationId)({code:o.code,msgraph_host:o.msGraphHost,cloud_graph_host_name:o.cloudGraphHostName,cloud_instance_host_name:o.cloudInstanceHostName},r.state,i.authority,this.networkClient,!1)}catch(e){throw e instanceof ut&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.browserStorage.cleanRequestByState(r.state),e}}logout(){return Promise.reject(os(ki))}}class ya{constructor(e){var t,o;this.atsAsyncMeasurement=void 0,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Ps(this.logger,this.performanceClient):co,this.eventHandler=new Gs(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new Fs(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger):(t=this.config.auth.clientId,o=this.logger,new Fs(t,{cacheLocation:qn.MemoryStorage,temporaryCacheLocation:qn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},co,o));const r={cacheLocation:qn.MemoryStorage,temporaryCacheLocation:qn.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Fs(this.config.auth.clientId,r,this.browserCrypto,this.logger),this.tokenCache=new pa(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e){const t=new ya(e);return await t.initialize(),t}trackPageVisibility(){this.atsAsyncMeasurement&&(this.logger.info("Perf: Visibility change detected"),this.atsAsyncMeasurement.increment({visibilityChangeCount:1}))}async initialize(){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");const e=this.config.system.allowNativeBroker,t=this.performanceClient.startMeasurement(Cr.InitializeClientApplication);if(this.eventHandler.emitEvent(zs.INITIALIZE_START),e)try{this.nativeExtensionProvider=await sa.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await $r(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),Cr.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient)(this.performanceClient)),this.initialized=!0,this.eventHandler.emitEvent(zs.INITIALIZE_END),t.end({allowNativeBroker:e,success:!0})}async handleRedirectPromise(o){this.logger.verbose("handleRedirectPromise called"),Ks.blockAPICallsBeforeInitialize(this.initialized);let r=o;if(this.config.auth.OIDCOptions?.serverResponseType===fe.QUERY){const e=window.location.href;r=zr.parseQueryServerResponse(e)}const n=this.getAllAccounts();if(this.isBrowserEnvironment){const o=r||t.EMPTY_STRING;let i=this.redirectResponse.get(o);if(void 0===i){this.eventHandler.emitEvent(zs.HANDLE_REDIRECT_START,e.InteractionType.Redirect),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise");const s=this.browserStorage.getCachedNativeRequest();let a;if(s&&sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!r){this.logger.trace("handleRedirectPromise - acquiring token from native platform");a=new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,s.accountId,this.nativeInternalStorage,s.correlationId).handleRedirectPromise()}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const e=this.browserStorage.getTemporaryCache($n,!0)||t.EMPTY_STRING;a=this.createRedirectClient(e).handleRedirectPromise(r)}i=a.then((t=>{if(t){n.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(zs.LOGIN_SUCCESS,e.InteractionType.Redirect,t),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_SUCCESS,e.InteractionType.Redirect,t),this.logger.verbose("handleRedirectResponse returned result, acquire token success"))}return this.eventHandler.emitEvent(zs.HANDLE_REDIRECT_END,e.InteractionType.Redirect),t})).catch((t=>{throw n.length>0?this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_FAILURE,e.InteractionType.Redirect,null,t):this.eventHandler.emitEvent(zs.LOGIN_FAILURE,e.InteractionType.Redirect,null,t),this.eventHandler.emitEvent(zs.HANDLE_REDIRECT_END,e.InteractionType.Redirect),t})),this.redirectResponse.set(o,i)}else this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call");return i}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async acquireTokenRedirect(t){const o=this.getRequestCorrelationId(t);this.logger.verbose("acquireTokenRedirect called",o),this.preflightBrowserEnvironmentCheck(e.InteractionType.Redirect);const r=this.getAllAccounts().length>0;let n;if(r?this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_START,e.InteractionType.Redirect,t):this.eventHandler.emitEvent(zs.LOGIN_START,e.InteractionType.Redirect,t),this.nativeExtensionProvider&&this.canUseNative(t)){n=new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(t),this.nativeInternalStorage,t.correlationId).acquireTokenRedirect(t).catch((e=>{if(e instanceof Zs&&ea(e)){this.nativeExtensionProvider=void 0;return this.createRedirectClient(t.correlationId).acquireToken(t)}if(e instanceof Br){this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createRedirectClient(t.correlationId).acquireToken(t)}throw this.getBrowserStorage().setInteractionInProgress(!1),e}))}else{n=this.createRedirectClient(t.correlationId).acquireToken(t)}return n.catch((t=>{throw r?this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_FAILURE,e.InteractionType.Redirect,null,t):this.eventHandler.emitEvent(zs.LOGIN_FAILURE,e.InteractionType.Redirect,null,t),t}))}acquireTokenPopup(t){const o=this.getRequestCorrelationId(t),r=this.performanceClient.startMeasurement(Cr.AcquireTokenPopup,o);try{this.logger.verbose("acquireTokenPopup called",o),this.preflightBrowserEnvironmentCheck(e.InteractionType.Popup)}catch(e){return Promise.reject(e)}const n=this.getAllAccounts();let i;if(n.length>0?this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_START,e.InteractionType.Popup,t):this.eventHandler.emitEvent(zs.LOGIN_START,e.InteractionType.Popup,t),this.canUseNative(t))i=this.acquireTokenNative(t,Xn.acquireTokenPopup).then((e=>(this.getBrowserStorage().setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),e))).catch((e=>{if(e instanceof Zs&&ea(e)){this.nativeExtensionProvider=void 0;return this.createPopupClient(t.correlationId).acquireToken(t)}if(e instanceof Br){this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createPopupClient(t.correlationId).acquireToken(t)}throw this.getBrowserStorage().setInteractionInProgress(!1),e}));else{i=this.createPopupClient(t.correlationId).acquireToken(t)}return i.then((t=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(zs.LOGIN_SUCCESS,e.InteractionType.Popup,t):this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_SUCCESS,e.InteractionType.Popup,t),r.add({accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),r.end({success:!0,requestId:t.requestId}),t))).catch((t=>(n.length>0?this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_FAILURE,e.InteractionType.Popup,null,t):this.eventHandler.emitEvent(zs.LOGIN_FAILURE,e.InteractionType.Popup,null,t),r.end({errorCode:t.errorCode,subErrorCode:t.subError,success:!1}),Promise.reject(t))))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(t){const o=this.getRequestCorrelationId(t),r={...t,prompt:t.prompt,correlationId:o};let n;if(this.preflightBrowserEnvironmentCheck(e.InteractionType.Silent),this.ssoSilentMeasurement=this.performanceClient.startMeasurement(Cr.SsoSilent,o),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",o),this.eventHandler.emitEvent(zs.SSO_SILENT_START,e.InteractionType.Silent,r),this.canUseNative(r))n=this.acquireTokenNative(r,Xn.ssoSilent).catch((e=>{if(e instanceof Zs&&ea(e)){this.nativeExtensionProvider=void 0;return this.createSilentIframeClient(r.correlationId).acquireToken(r)}throw e}));else{n=this.createSilentIframeClient(r.correlationId).acquireToken(r)}return n.then((t=>(this.eventHandler.emitEvent(zs.SSO_SILENT_SUCCESS,e.InteractionType.Silent,t),this.ssoSilentMeasurement?.add({accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:t.fromNativeBroker,requestId:t.requestId}),t))).catch((t=>{throw this.eventHandler.emitEvent(zs.SSO_SILENT_FAILURE,e.InteractionType.Silent,null,t),this.ssoSilentMeasurement?.end({errorCode:t.errorCode,subErrorCode:t.subError,success:!1}),t})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenByCode(t){const o=this.getRequestCorrelationId(t);this.preflightBrowserEnvironmentCheck(e.InteractionType.Silent),this.logger.trace("acquireTokenByCode called",o),this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_BY_CODE_START,e.InteractionType.Silent,t);const r=this.performanceClient.startMeasurement(Cr.AcquireTokenByCode,t.correlationId);try{if(t.code&&t.nativeAccountId)throw os(Ki);if(t.code){const n=t.code;let i=this.hybridAuthCodeResponses.get(n);return i?(this.logger.verbose("Existing acquireTokenByCode request found",t.correlationId),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",o),i=this.acquireTokenByCodeAsync({...t,correlationId:o}).then((t=>(this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_BY_CODE_SUCCESS,e.InteractionType.Silent,t),this.hybridAuthCodeResponses.delete(n),r.add({accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),r.end({success:!0,isNativeBroker:t.fromNativeBroker,requestId:t.requestId}),t))).catch((t=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_BY_CODE_FAILURE,e.InteractionType.Silent,null,t),r.end({errorCode:t.errorCode,subErrorCode:t.subError,success:!1}),t})),this.hybridAuthCodeResponses.set(n,i)),i}if(t.nativeAccountId){if(this.canUseNative(t,t.nativeAccountId))return this.acquireTokenNative(t,Xn.acquireTokenByCode,t.nativeAccountId).catch((e=>{throw e instanceof Zs&&ea(e)&&(this.nativeExtensionProvider=void 0),e}));throw os(Gi)}throw os(Fi)}catch(t){throw this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_BY_CODE_FAILURE,e.InteractionType.Silent,null,t),r.end({errorCode:t instanceof ut&&t.errorCode||void 0,subErrorCode:t instanceof ut&&t.subError||void 0,success:!1}),t}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(Cr.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then((e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,requestId:e.requestId}),e))).catch((e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({errorCode:e.errorCode,subErrorCode:e.subError,success:!1}),e})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)}))}async acquireTokenFromCache(e,t,o){switch(this.performanceClient.addQueueMeasurement(Cr.AcquireTokenFromCache,t.correlationId),o.cacheLookupPolicy){case ni.Default:case ni.AccessToken:case ni.AccessTokenAndRefreshToken:return $r(e.acquireToken.bind(e),Cr.SilentCacheClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(t);default:throw ao(jt)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(Cr.AcquireTokenByRefreshToken,e.correlationId),t.cacheLookupPolicy){case ni.Default:case ni.AccessTokenAndRefreshToken:case ni.RefreshToken:case ni.RefreshTokenAndNetwork:const t=this.createSilentRefreshClient(e.correlationId);return $r(t.acquireToken.bind(t),Cr.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw ao(jt)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Cr.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return $r(t.acquireToken.bind(t),Cr.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(t){const o=this.getRequestCorrelationId(t);this.preflightBrowserEnvironmentCheck(e.InteractionType.Redirect);return this.createRedirectClient(o).logout(t)}logoutPopup(t){try{const o=this.getRequestCorrelationId(t);this.preflightBrowserEnvironmentCheck(e.InteractionType.Popup);return this.createPopupClient(o).logout(t)}catch(e){return Promise.reject(e)}}async clearCache(e){const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return this.logger.verbose("getAllAccounts called"),this.isBrowserEnvironment?this.browserStorage.getAllAccounts(e):[]}getAccount(e){if(this.logger.trace("getAccount called"),0===Object.keys(e).length)return this.logger.warning("getAccount: No accountFilter provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy(e);return t?(this.logger.verbose("getAccount: Account matching provided filter found, returning"),t):(this.logger.verbose("getAccount: No matching account found, returning null"),null)}getAccountByUsername(e){if(this.logger.trace("getAccountByUsername called"),!e)return this.logger.warning("getAccountByUsername: No username provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({username:e});return t?(this.logger.verbose("getAccountByUsername: Account matching username found, returning"),this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),t):(this.logger.verbose("getAccountByUsername: No matching account found, returning null"),null)}getAccountByHomeId(e){if(this.logger.trace("getAccountByHomeId called"),!e)return this.logger.warning("getAccountByHomeId: No homeAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({homeAccountId:e});return t?(this.logger.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),t):(this.logger.verbose("getAccountByHomeId: No matching account found, returning null"),null)}getAccountByLocalId(e){if(this.logger.trace("getAccountByLocalId called"),!e)return this.logger.warning("getAccountByLocalId: No localAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({localAccountId:e});return t?(this.logger.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),t):(this.logger.verbose("getAccountByLocalId: No matching account found, returning null"),null)}setActiveAccount(e){this.browserStorage.setActiveAccount(e)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const o=Jo.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(o),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}preflightBrowserEnvironmentCheck(t,o=!1){if(this.logger.verbose("preflightBrowserEnvironmentCheck started"),Ks.blockNonBrowserEnvironment(this.isBrowserEnvironment),Ks.blockRedirectInIframe(t,this.config.system.allowRedirectInIframe),Ks.blockReloadInHiddenIframes(),Ks.blockAcquireTokenInPopups(),Ks.blockAPICallsBeforeInitialize(this.initialized),t===e.InteractionType.Redirect&&this.config.cache.cacheLocation===qn.MemoryStorage&&!this.config.cache.storeAuthStateInCookie)throw Bs(Os);t!==e.InteractionType.Redirect&&t!==e.InteractionType.Popup||this.preflightInteractiveRequest(!o)}preflightInteractiveRequest(e){this.logger.verbose("preflightInteractiveRequest called, validating app environment"),Ks.blockReloadInHiddenIframes(),e&&this.getBrowserStorage().setInteractionInProgress(!0)}async acquireTokenNative(e,t,o){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw os(Qi);return new ia(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,o||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case de.NONE:case de.CONSENT:case de.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e))||(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){const t=e.account||this.browserStorage.getAccountInfoByHints(e.loginHint,e.sid)||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new ca(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ha(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new ua(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new oa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new ga(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new fa(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xn.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}getBrowserStorage(){return this.browserStorage}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?Ts():t.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||ti})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||ti})}async acquireTokenSilent(o){const r=this.getRequestCorrelationId(o),n=this.performanceClient.startMeasurement(Cr.AcquireTokenSilent,r);n.add({cacheLookupPolicy:o.cacheLookupPolicy}),this.preflightBrowserEnvironmentCheck(e.InteractionType.Silent),this.logger.verbose("acquireTokenSilent called",r);const i=o.account||this.getActiveAccount();if(!i)throw os(Ai);const s={clientId:this.config.auth.clientId,authority:o.authority||t.EMPTY_STRING,scopes:o.scopes,homeAccountIdentifier:i.homeAccountId,claims:o.claims,authenticationScheme:o.authenticationScheme,resourceRequestMethod:o.resourceRequestMethod,resourceRequestUri:o.resourceRequestUri,shrClaims:o.shrClaims,sshKid:o.sshKid},a=JSON.stringify(s),c=this.activeSilentTokenRequests.get(a);if(void 0===c){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r);const e=$r(this.acquireTokenSilentAsync.bind(this),Cr.AcquireTokenSilentAsync,this.logger,this.performanceClient,r)({...o,correlationId:r},i).then((e=>(this.activeSilentTokenRequests.delete(a),n.add({accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length}),n.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,cacheLookupPolicy:o.cacheLookupPolicy,requestId:e.requestId}),e))).catch((e=>{throw this.activeSilentTokenRequests.delete(a),n.end({errorCode:e.errorCode,subErrorCode:e.subError,success:!1}),e}));return this.activeSilentTokenRequests.set(a,e),e}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),n.discard(),c}async acquireTokenSilentAsync(t,o){let r;if(this.performanceClient.addQueueMeasurement(Cr.AcquireTokenSilentAsync,t.correlationId),this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_START,e.InteractionType.Silent,t),this.atsAsyncMeasurement=this.performanceClient.startMeasurement(Cr.AcquireTokenSilentAsync,t.correlationId),this.atsAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibility),sa.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,t.authenticationScheme)&&o.nativeAccountId){this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform");const e={...t,account:o};r=this.acquireTokenNative(e,Xn.acquireTokenSilent_silentFlow).catch((async e=>{if(e instanceof Zs&&ea(e)){this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0;return this.createSilentIframeClient(t.correlationId).acquireToken(t)}throw e}))}else{this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow");const n=this.createSilentCacheClient(t.correlationId),i=await $r(n.initializeSilentRequest.bind(n),Cr.InitializeSilentRequest,this.logger,this.performanceClient,t.correlationId)(t,o),s={...t,cacheLookupPolicy:t.cacheLookupPolicy||ni.Default};r=$r(this.acquireTokenFromCache.bind(this),Cr.AcquireTokenFromCache,this.logger,this.performanceClient,i.correlationId)(n,i,s).catch((o=>{if(s.cacheLookupPolicy===ni.AccessToken)throw o;return Ks.blockReloadInHiddenIframes(),this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_NETWORK_START,e.InteractionType.Silent,i),$r(this.acquireTokenByRefreshToken.bind(this),Cr.AcquireTokenByRefreshToken,this.logger,this.performanceClient,i.correlationId)(i,s).catch((e=>{const o=e instanceof dr,r=e instanceof Br,n=e.errorCode===In;if((!o||!n||r||s.cacheLookupPolicy===ni.AccessTokenAndRefreshToken||s.cacheLookupPolicy===ni.RefreshToken)&&s.cacheLookupPolicy!==ni.Skip)throw e;return this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",t.correlationId),$r(this.acquireTokenBySilentIframe.bind(this),Cr.AcquireTokenBySilentIframe,this.logger,this.performanceClient,i.correlationId)(i)}))}))}return r.then((t=>(this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_SUCCESS,e.InteractionType.Silent,t),this.atsAsyncMeasurement?.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,requestId:t.requestId}),t))).catch((t=>{throw this.eventHandler.emitEvent(zs.ACQUIRE_TOKEN_FAILURE,e.InteractionType.Silent,null,t),this.atsAsyncMeasurement?.end({errorCode:t.errorCode,subErrorCode:t.subError,success:!1}),t})).finally((()=>{document.removeEventListener("visibilitychange",this.trackPageVisibility)}))}}var Ca=Object.freeze({__proto__:null,StandardController:ya});class va{static async createPublicClientApplication(e){const t=new hs(e),o=await t.createController();return new va(e,o)}constructor(e,t){if(t)this.controller=t;else{const t=new ls(e);this.controller=new ya(t)}}async initialize(){return this.controller.initialize()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}const wa={initialize:()=>Promise.reject(Bs(Ns)),acquireTokenPopup:()=>Promise.reject(Bs(Ns)),acquireTokenRedirect:()=>Promise.reject(Bs(Ns)),acquireTokenSilent:()=>Promise.reject(Bs(Ns)),acquireTokenByCode:()=>Promise.reject(Bs(Ns)),getAllAccounts:()=>[],getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(Bs(Ns)),loginPopup:()=>Promise.reject(Bs(Ns)),loginRedirect:()=>Promise.reject(Bs(Ns)),logout:()=>Promise.reject(Bs(Ns)),logoutRedirect:()=>Promise.reject(Bs(Ns)),logoutPopup:()=>Promise.reject(Bs(Ns)),ssoSilent:()=>Promise.reject(Bs(Ns)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw Bs(Ns)},getLogger:()=>{throw Bs(Ns)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw Bs(Ns)},hydrateCache:()=>Promise.reject(Bs(Ns)),clearCache:()=>Promise.reject(Bs(Ns))};class Ia{constructor(e,t){this.correlationId=t,this.measureName=Ia.makeMeasureName(e,t),this.startMark=Ia.makeStartMark(e,t),this.endMark=Ia.makeEndMark(e,t)}static makeMeasureName(e,t){return`msal.measure.${e}.${t}`}static makeStartMark(e,t){return`msal.start.${e}.${t}`}static makeEndMark(e,t){return`msal.end.${e}.${t}`}static supportsBrowserPerformance(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.mark&&"function"==typeof window.performance.measure&&"function"==typeof window.performance.clearMarks&&"function"==typeof window.performance.clearMeasures&&"function"==typeof window.performance.getEntriesByName}static flushMeasurements(e,t){if(Ia.supportsBrowserPerformance())try{t.forEach((t=>{const o=Ia.makeMeasureName(t.name,e);window.performance.getEntriesByName(o,"measure").length>0&&(window.performance.clearMeasures(o),window.performance.clearMarks(Ia.makeStartMark(o,e)),window.performance.clearMarks(Ia.makeEndMark(o,e)))}))}catch(e){}}startMeasurement(){if(Ia.supportsBrowserPerformance())try{window.performance.mark(this.startMark)}catch(e){}}endMeasurement(){if(Ia.supportsBrowserPerformance())try{window.performance.mark(this.endMark),window.performance.measure(this.measureName,this.startMark,this.endMark)}catch(e){}}flushMeasurement(){if(Ia.supportsBrowserPerformance())try{const e=window.performance.getEntriesByName(this.measureName,"measure");if(e.length>0){const t=e[0].duration;return window.performance.clearMeasures(this.measureName),window.performance.clearMarks(this.startMark),window.performance.clearMarks(this.endMark),t}}catch(e){}return null}}e.AccountEntity=Jo,e.ApiId=Xn,e.AuthError=ut,e.AuthErrorCodes=lt,e.AuthErrorMessage=dt,e.AuthenticationHeaderParser=class{constructor(e){this.headers=e}getShrNonce(){const e=this.headers[u];if(e){const t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw Fo(Oo)}const t=this.headers[d];if(t){const e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw Fo(Oo)}throw Fo(No)}parseChallenges(e){const o=e.indexOf(" "),r=e.substr(o+1).split(","),n={};return r.forEach((e=>{const[o,r]=e.split("=");n[o]=unescape(r.replace(/['"]+/g,t.EMPTY_STRING))})),n}},e.AuthenticationScheme=Be,e.AzureCloudInstance=po,e.BrowserAuthError=ts,e.BrowserAuthErrorCodes=Ji,e.BrowserAuthErrorMessage=es,e.BrowserCacheLocation=qn,e.BrowserConfigurationAuthError=Us,e.BrowserConfigurationAuthErrorCodes=qs,e.BrowserConfigurationAuthErrorMessage=Ls,e.BrowserPerformanceClient=class extends Cn{constructor(e,o){super(e.auth.clientId,e.auth.authority||`${t.DEFAULT_AUTHORITY}`,new ho(e.system?.loggerOptions||{},is,ss),is,ss,e.telemetry?.application||{appName:"",appVersion:""},o)}startPerformanceMeasurement(e,t){return new Ia(e,t)}generateId(){return window.crypto.randomUUID()}getPageVisibility(){return document.visibilityState?.toString()||null}deleteIncompleteSubMeasurements(e){const t=this.eventsByCorrelationId.get(e.event.correlationId),o=t&&t.eventId===e.event.eventId,r=[];o&&t?.incompleteSubMeasurements&&t.incompleteSubMeasurements.forEach((e=>{r.push({...e})})),r.length>0&&Ia.flushMeasurements(e.event.correlationId,r)}supportsBrowserPerformanceNow(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.now}startMeasurement(e,t){const o=this.getPageVisibility(),r=super.startMeasurement(e,t);return{...r,end:e=>{const t=r.end({startPageVisibility:o,endPageVisibility:this.getPageVisibility(),...e});return this.deleteIncompleteSubMeasurements(r),t},discard:()=>{r.discard(),this.deleteIncompleteSubMeasurements(r),r.measurement.flushMeasurement()}}}setPreQueueTime(e,t){if(!this.supportsBrowserPerformanceNow())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to set telemetry queue time`);const o=this.preQueueTimeByCorrelationId.get(t);o&&(this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${o.name} found`,t),this.addQueueMeasurement(o.name,t,void 0,!0)),this.preQueueTimeByCorrelationId.set(t,{name:e,time:window.performance.now()})}addQueueMeasurement(e,t,o,r){if(!this.supportsBrowserPerformanceNow())return void this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${e}`);if(!t)return void this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to add queue measurement`);const n=super.getPreQueueTime(e,t);if(!n)return;const i=window.performance.now(),s=o||super.calculateQueuedTime(n,i);return super.addQueueMeasurement(e,t,s,r)}},e.BrowserPerformanceMeasurement=Ia,e.BrowserStorage=Ds,e.BrowserUtils=Ks,e.CacheLookupPolicy=ni,e.ClientAuthError=so,e.ClientAuthErrorCodes=ro,e.ClientAuthErrorMessage=io,e.ClientConfigurationError=xo,e.ClientConfigurationErrorCodes=Uo,e.ClientConfigurationErrorMessage=Do,e.DEFAULT_IFRAME_TIMEOUT_MS=ns,e.EventMessageUtils=class{static getInteractionStatusFromEvent(t,o){switch(t.eventType){case zs.LOGIN_START:return ei.Login;case zs.SSO_SILENT_START:return ei.SsoSilent;case zs.ACQUIRE_TOKEN_START:if(t.interactionType===e.InteractionType.Redirect||t.interactionType===e.InteractionType.Popup)return ei.AcquireToken;break;case zs.HANDLE_REDIRECT_START:return ei.HandleRedirect;case zs.LOGOUT_START:return ei.Logout;case zs.SSO_SILENT_SUCCESS:case zs.SSO_SILENT_FAILURE:if(o&&o!==ei.SsoSilent)break;return ei.None;case zs.LOGOUT_END:if(o&&o!==ei.Logout)break;return ei.None;case zs.HANDLE_REDIRECT_END:if(o&&o!==ei.HandleRedirect)break;return ei.None;case zs.LOGIN_SUCCESS:case zs.LOGIN_FAILURE:case zs.ACQUIRE_TOKEN_SUCCESS:case zs.ACQUIRE_TOKEN_FAILURE:case zs.RESTORE_FROM_BFCACHE:if(t.interactionType===e.InteractionType.Redirect||t.interactionType===e.InteractionType.Popup){if(o&&o!==ei.Login&&o!==ei.AcquireToken)break;return ei.None}}return null}},e.EventType=zs,e.InteractionRequiredAuthError=Br,e.InteractionRequiredAuthErrorCodes=Or,e.InteractionRequiredAuthErrorMessage=Ur,e.InteractionStatus=ei,e.Logger=ho,e.MemoryStorage=As,e.NavigationClient=ii,e.OIDC_DEFAULT_SCOPES=s,e.PerformanceEvents=Cr,e.PromptValue=de,e.ProtocolMode=Vo,e.PublicClientApplication=va,e.ServerError=dr,e.ServerResponseType=fe,e.SignedHttpRequest=class{constructor(e,t){const o=t&&t.loggerOptions||{};this.logger=new ho(o,is,ss),this.cryptoOps=new Ps(this.logger),this.popTokenGenerator=new Qr(this.cryptoOps),this.shrParameters=e}async generatePublicKeyThumbprint(){const{kid:e}=await this.popTokenGenerator.generateKid(this.shrParameters);return e}async signRequest(e,t,o){return this.popTokenGenerator.signPayload(e,t,this.shrParameters,o)}async removeKeys(e){return await this.cryptoOps.removeTokenBindingKey(e)}},e.StringUtils=Ko,e.UrlString=zr,e.WrapperSKU={React:"@azure/msal-react",Angular:"@azure/msal-angular"},e.stubbedPublicClientApplication=wa,e.version=ss}));
